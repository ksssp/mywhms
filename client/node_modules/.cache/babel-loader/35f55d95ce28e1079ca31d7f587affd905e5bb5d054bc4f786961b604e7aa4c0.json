{"ast":null,"code":"import $ from \"jquery\";\nimport jszip from 'jszip';\nimport 'datatables.net-buttons-bs4';\nimport 'datatables.net-buttons/js/buttons.colVis.mjs';\nimport 'datatables.net-buttons/js/buttons.html5.mjs';\nimport 'datatables.net-colreorder-bs4';\nexport default {\n  name: \"AppDataTableJquery\",\n  props: [downloadFileName, fields, fieldDefs, items],\n  components: {},\n  data: function () {\n    return {\n      totalRows: 0,\n      downloadFileName: \"\",\n      columns: [],\n      columnDefs: [],\n      tableData: []\n    };\n  },\n  created() {\n    this.exportFileName = this.downloadFileName;\n    this.columns = this.fields;\n    this.columnDefs = this.fieldDefs;\n    this.tableData = this.items;\n    this.totalRows = this.items.length;\n    $(\"#app-table-list\").DataTable({\n      paging: true,\n      searching: true,\n      ordering: true,\n      scrollX: true,\n      columns: this.columns,\n      columnDefs: this.columnDefs,\n      data: this.tableData,\n      colReorder: true,\n      dom: \"<'row'<'col-md-2'l><'col-md-4'f><'col-md-6'B>>\" + \"<'row'<'col-md-12'tr>>\" + \"<'row'<'col-md-5'i><'col-md-7'p>>\",\n      buttons: [{\n        extend: 'collection',\n        text: 'Export',\n        autoClose: true,\n        buttons: ['csv', 'excel'],\n        collectionLayout: 'dropdown',\n        exportOptions: {\n          columns: ':visible'\n        }\n      }, {\n        extend: 'colvis',\n        text: 'Show/Hide Columns',\n        postfixButtons: ['colvisRestore']\n      }]\n    });\n  },\n  methods: {\n    edit(item, index, button) {\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    delete(item, index, button) {\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    }\n  }\n};","map":{"version":3,"names":["$","jszip","name","props","downloadFileName","fields","fieldDefs","items","components","data","totalRows","columns","columnDefs","tableData","created","exportFileName","length","DataTable","paging","searching","ordering","scrollX","colReorder","dom","buttons","extend","text","autoClose","collectionLayout","exportOptions","postfixButtons","methods","edit","item","index","button","delete"],"sources":["src/components/tables/AppDataTableJquery.vue"],"sourcesContent":["<template>\n    <div class=\"tables\">\n        <div class=\"row col-lg-12 grid-margin stretch-card\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <table id=\"app-table-list\" class=\"table hover row-border stripe order-column\" style=\"width:100%\"></table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport $ from \"jquery\";\n\nimport jszip from 'jszip';\nimport 'datatables.net-buttons-bs4';\nimport 'datatables.net-buttons/js/buttons.colVis.mjs';\nimport 'datatables.net-buttons/js/buttons.html5.mjs';\nimport 'datatables.net-colreorder-bs4';\n\nexport default {\n    name: \"AppDataTableJquery\",\n    props: [\n        downloadFileName,\n        fields,\n        fieldDefs,\n        items,\n    ],\n    components: {\n    },\n    data: function () {\n        return {\n            totalRows: 0,\n            downloadFileName: \"\",\n            columns: [],\n            columnDefs: [],\n            tableData: []\n        };\n    },\n    created() {\n        this.exportFileName = this.downloadFileName;\n        this.columns = this.fields;\n        this.columnDefs = this.fieldDefs;\n        this.tableData = this.items;\n        this.totalRows = this.items.length;\n        $(\"#app-table-list\").DataTable({\n            paging: true,\n            searching: true,\n            ordering: true,\n            scrollX: true,\n            columns: this.columns,\n            columnDefs: this.columnDefs,\n            data: this.tableData,\n            colReorder: true,\n            dom: \"<'row'<'col-md-2'l><'col-md-4'f><'col-md-6'B>>\" +\n                \"<'row'<'col-md-12'tr>>\" +\n                \"<'row'<'col-md-5'i><'col-md-7'p>>\",\n            buttons: [ \n                {\n                    extend: 'collection',\n                    text: 'Export',\n                    autoClose: true,\n                    buttons: [ 'csv', 'excel' ],\n                    collectionLayout: 'dropdown',\n                    exportOptions: {\n                        columns: ':visible'\n                    } \n                },\n                {\n                    extend: 'colvis',\n                    text: 'Show/Hide Columns',\n                    postfixButtons: ['colvisRestore']\n\n                }\n            ]\n        });\n    },\n    methods: {\n        edit(item, index, button) {\n            // this.infoModal.title = `Row index: ${index}`\n            // this.infoModal.content = JSON.stringify(item, null, 2)\n            // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n        },\n        delete(item, index, button) {\n            // this.infoModal.title = `Row index: ${index}`\n            // this.infoModal.content = JSON.stringify(item, null, 2)\n            // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n        }\n    }\n}\n</script>"],"mappings":"AAaA,OAAAA,CAAA;AAEA,OAAAC,KAAA;AACA;AACA;AACA;AACA;AAEA;EACAC,IAAA;EACAC,KAAA,GACAC,gBAAA,EACAC,MAAA,EACAC,SAAA,EACAC,KAAA,CACA;EACAC,UAAA,GACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,SAAA;MACAN,gBAAA;MACAO,OAAA;MACAC,UAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA,QAAAX,gBAAA;IACA,KAAAO,OAAA,QAAAN,MAAA;IACA,KAAAO,UAAA,QAAAN,SAAA;IACA,KAAAO,SAAA,QAAAN,KAAA;IACA,KAAAG,SAAA,QAAAH,KAAA,CAAAS,MAAA;IACAhB,CAAA,oBAAAiB,SAAA;MACAC,MAAA;MACAC,SAAA;MACAC,QAAA;MACAC,OAAA;MACAV,OAAA,OAAAA,OAAA;MACAC,UAAA,OAAAA,UAAA;MACAH,IAAA,OAAAI,SAAA;MACAS,UAAA;MACAC,GAAA,qDACA,2BACA;MACAC,OAAA,GACA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;QACAH,OAAA;QACAI,gBAAA;QACAC,aAAA;UACAlB,OAAA;QACA;MACA,GACA;QACAc,MAAA;QACAC,IAAA;QACAI,cAAA;MAEA;IAEA;EACA;EACAC,OAAA;IACAC,KAAAC,IAAA,EAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;IAAA,CACA;IACAC,OAAAH,IAAA,EAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;IAAA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
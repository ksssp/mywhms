{"ast":null,"code":"import { validationMixin } from 'vuelidate';\nimport { required, minLength, maxLength, numeric } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nexport default {\n  name: 'CreateTrademarkModal',\n  mixins: [validationMixin],\n  data: function () {\n    return {\n      form: {\n        trademarkName: null,\n        customerName: null,\n        mobileNumber: null,\n        town: null,\n        creationDate: null\n      },\n      footerBgVariant: \"light\"\n    };\n  },\n  validations: {\n    form: {\n      trademarkName: {\n        required,\n        minLength: minLength(3)\n      },\n      customerName: {\n        required,\n        minLength: minLength(3)\n      },\n      mobileNumber: {\n        required,\n        numeric,\n        minLength: minLength(10),\n        maxLength: maxLength(10)\n      },\n      town: {\n        required,\n        minLength: minLength(3)\n      }\n    }\n  },\n  methods: {\n    handleOk(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n    handleSubmit() {\n      // Exit when the form isn't valid\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        console.log(\"There are errors in the form\");\n        return;\n      }\n\n      // Add a new trademark\n      this.createNewTrademark();\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$bvModal.hide('createTrademarkModal');\n      });\n    },\n    createNewTrademark() {\n      let apiURL = 'http://localhost:5200/referenceData/trademarks';\n      let newTrademark = {\n        trademarkName: this.form.trademarkName,\n        customerName: this.form.customerName,\n        mobileNumber: this.form.mobileNumber,\n        town: this.form.town,\n        creationDate: new Date()\n      };\n      console.log(newTrademark);\n      axios.post(apiURL, newTrademark).then(res => {\n        newTrademark._id = res;\n        console.log(newTrademark, \"post creation\");\n\n        // show success notification\n        this.showSnotify(\"success\");\n\n        // reload table and update table header\n      }).catch(error => {\n        // show failure notification\n        this.showSnotify(\"error\");\n        console.log(error);\n      });\n    },\n    showSnotify(notificationType) {\n      if (notificationType = \"success\") {\n        // this.$snotify.success('Trademark created successfully!', {\n        //     timeout: 2000,\n        //     showProgressBar: false,\n        //     closeOnClick: false,\n        //     pauseOnHover: true,\n        // });\n      } else if (notificationType = \"error\") {\n        // this.$snotify.error('Trademark creation failed!', {\n        //     timeout: 2000,\n        //     showProgressBar: false,\n        //     closeOnClick: false,\n        //     pauseOnHover: true,\n        // });\n      }\n    }\n  }\n};","map":{"version":3,"names":["validationMixin","required","minLength","maxLength","numeric","axios","name","mixins","data","form","trademarkName","customerName","mobileNumber","town","creationDate","footerBgVariant","validations","methods","handleOk","bvModalEvent","preventDefault","handleSubmit","$v","$touch","$anyError","console","log","createNewTrademark","$nextTick","$bvModal","hide","apiURL","newTrademark","Date","post","then","res","_id","showSnotify","catch","error","notificationType"],"sources":["src/components/forms/CreateTrademarkModal.vue"],"sourcesContent":["<template>\n    <div>\n        <b-modal centered id=\"createTrademarkModal\" :footer-bg-variant=\"footerBgVariant\" title=\"Create new Trademark\"\n            size=\"md\" @ok=\"handleOk\">\n            <section class=\"validation\">\n                <div class=\"grid-margin stretch-card col-lg-12\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <b-form>\n                                <b-form-group id=\"trademark-name-group\" label=\"Trademark Name\" label-for=\"trademark-name\">\n                                    <b-form-input id=\"trademark-name\" name=\"trademark-name\"\n                                        v-model=\"$v.form.trademarkName.$model\"\n                                        :state=\"$v.form.trademarkName.$dirty ? !$v.form.trademarkName.$error : null\"\n                                        aria-describedby=\"trademark-name-live-feedback\"\n                                        placeholder=\"Trademark Name\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"trademark-name-live-feedback\">\n                                        This is a required field and must be at least 3 characters in the format\n                                        ABC/DEF.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"cusotmer-name-group\" label=\"Customer Name\" label-for=\"customer-name\">\n                                    <b-form-input id=\"customer-name\" name=\"customer-name\"\n                                        v-model=\"$v.form.customerName.$model\"\n                                        :state=\"$v.form.customerName.$dirty ? !$v.form.customerName.$error : null\"\n                                        aria-describedby=\"customer-name-live-feedback\"\n                                        placeholder=\"Customer Full Name\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"customer-name-live-feedback\">\n                                        This is a required field and must be at least 3 characters.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"mobile-number-group\" label=\"Mobile Number\" label-for=\"mobile-number\">\n                                    <b-form-input id=\"mobile-number\" name=\"mobile-number\"\n                                        v-model=\"$v.form.mobileNumber.$model\"\n                                        :state=\"$v.form.mobileNumber.$dirty ? !$v.form.mobileNumber.$error : null\"\n                                        aria-describedby=\"mobile-number-live-feedback\"\n                                        placeholder=\"Mobile Number\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"mobile-number-live-feedback\">\n                                        This is a required field and must be exactly 10 digits.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"town-group\" label=\"Town\" label-for=\"towm\">\n                                    <b-form-input id=\"towm\" name=\"town\" v-model=\"$v.form.town.$model\"\n                                        :state=\"$v.form.town.$dirty ? !$v.form.town.$error : null\"\n                                        aria-describedby=\"town-live-feedback\" placeholder=\"Town or Village\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"town-live-feedback\">\n                                        This is a required field and must be at least 6 characters.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n                            </b-form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </b-modal>\n    </div>\n</template>\n  \n<script scoped lang=\"js\">\nimport { validationMixin } from 'vuelidate';\nimport { required, minLength, maxLength, numeric } from 'vuelidate/lib/validators';\nimport axios from 'axios';\n\nexport default {\n    name: 'CreateTrademarkModal',\n    mixins: [validationMixin],\n    data: function () {\n        return {\n            form: {\n                trademarkName: null,\n                customerName: null,\n                mobileNumber: null,\n                town: null,\n                creationDate: null\n            },\n            footerBgVariant: \"light\",\n        }\n    },\n    validations: {\n        form: {\n            trademarkName: {\n                required,\n                minLength: minLength(3)\n            },\n            customerName: {\n                required,\n                minLength: minLength(3)\n            },\n            mobileNumber: {\n                required,\n                numeric,\n                minLength: minLength(10),\n                maxLength: maxLength(10)\n            },\n            town: {\n                required,\n                minLength: minLength(3)\n            }\n        }\n    },\n    methods: {\n        handleOk(bvModalEvent) {\n            // Prevent modal from closing\n            bvModalEvent.preventDefault()\n            // Trigger submit handler\n            this.handleSubmit()\n        },\n        handleSubmit() {\n            // Exit when the form isn't valid\n            this.$v.form.$touch()\n            if (this.$v.form.$anyError) {\n                console.log(\"There are errors in the form\");\n                return\n            }\n\n            // Add a new trademark\n            this.createNewTrademark();\n\n            // Hide the modal manually\n            this.$nextTick(() => {\n                this.$bvModal.hide('createTrademarkModal')\n            })\n        },\n        createNewTrademark() {\n            let apiURL = 'http://localhost:5200/referenceData/trademarks';\n            let newTrademark = {\n                trademarkName: this.form.trademarkName,\n                customerName: this.form.customerName,\n                mobileNumber: this.form.mobileNumber,\n                town: this.form.town,\n                creationDate: new Date()\n            };\n            console.log(newTrademark);\n            axios.post(apiURL, newTrademark).then((res) => {\n                newTrademark._id = res;\n                console.log(newTrademark, \"post creation\")\n\n                // show success notification\n                this.showSnotify(\"success\");\n\n                // reload table and update table header\n            }).catch(error => {\n                // show failure notification\n                this.showSnotify(\"error\");\n                console.log(error);\n            });\n        },\n        showSnotify(notificationType) {\n            if (notificationType = \"success\") {\n                // this.$snotify.success('Trademark created successfully!', {\n                //     timeout: 2000,\n                //     showProgressBar: false,\n                //     closeOnClick: false,\n                //     pauseOnHover: true,\n                // });\n            } else if (notificationType = \"error\") {\n                // this.$snotify.error('Trademark creation failed!', {\n                //     timeout: 2000,\n                //     showProgressBar: false,\n                //     closeOnClick: false,\n                //     pauseOnHover: true,\n                // });\n            }\n        }\n    }\n}\n</script>"],"mappings":"AAiEA,SAAAA,eAAA;AACA,SAAAC,QAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,OAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAP,eAAA;EACAQ,IAAA,WAAAA,CAAA;IACA;MACAC,IAAA;QACAC,aAAA;QACAC,YAAA;QACAC,YAAA;QACAC,IAAA;QACAC,YAAA;MACA;MACAC,eAAA;IACA;EACA;EACAC,WAAA;IACAP,IAAA;MACAC,aAAA;QACAT,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAS,YAAA;QACAV,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAU,YAAA;QACAX,QAAA;QACAG,OAAA;QACAF,SAAA,EAAAA,SAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAU,IAAA;QACAZ,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;IACA;EACA;EACAe,OAAA;IACAC,SAAAC,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAC,YAAA;IACA;IACAA,aAAA;MACA;MACA,KAAAC,EAAA,CAAAb,IAAA,CAAAc,MAAA;MACA,SAAAD,EAAA,CAAAb,IAAA,CAAAe,SAAA;QACAC,OAAA,CAAAC,GAAA;QACA;MACA;;MAEA;MACA,KAAAC,kBAAA;;MAEA;MACA,KAAAC,SAAA;QACA,KAAAC,QAAA,CAAAC,IAAA;MACA;IACA;IACAH,mBAAA;MACA,IAAAI,MAAA;MACA,IAAAC,YAAA;QACAtB,aAAA,OAAAD,IAAA,CAAAC,aAAA;QACAC,YAAA,OAAAF,IAAA,CAAAE,YAAA;QACAC,YAAA,OAAAH,IAAA,CAAAG,YAAA;QACAC,IAAA,OAAAJ,IAAA,CAAAI,IAAA;QACAC,YAAA,MAAAmB,IAAA;MACA;MACAR,OAAA,CAAAC,GAAA,CAAAM,YAAA;MACA3B,KAAA,CAAA6B,IAAA,CAAAH,MAAA,EAAAC,YAAA,EAAAG,IAAA,CAAAC,GAAA;QACAJ,YAAA,CAAAK,GAAA,GAAAD,GAAA;QACAX,OAAA,CAAAC,GAAA,CAAAM,YAAA;;QAEA;QACA,KAAAM,WAAA;;QAEA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACA;QACA,KAAAF,WAAA;QACAb,OAAA,CAAAC,GAAA,CAAAc,KAAA;MACA;IACA;IACAF,YAAAG,gBAAA;MACA,IAAAA,gBAAA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA,UAAAA,gBAAA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EmployeeFormSchema from './schemas/EmployeeFormSchema';\nimport { createEmployee, updateEmployee } from '@/services/EmployeeService';\nexport default {\n  name: 'EmployeeForm',\n  props: [\"formData\", \"submitMode\"],\n  data: function () {\n    return {\n      entityListingUrl: \"/referenceData/employees\",\n      formSchema: EmployeeFormSchema,\n      formOptions: {\n        validateAfterChanged: true\n      },\n      loadedEmployeeId: \"\",\n      isSaving: false,\n      formModel: {\n        employeeCode: \"\",\n        employeeFullName: \"\",\n        designation: \"\",\n        monthlySalary: \"\"\n      }\n    };\n  },\n  created() {\n    this.formModel = JSON.parse(JSON.stringify(this.formData));\n    this.loadedEmployeeId = this.formData._id;\n  },\n  methods: {\n    submitForm() {\n      // submit form data to the backend - entity - Employee\n      if (this.submitMode == \"update\") {\n        updateEmployee(this.loadedEmployeeId, this.formModel).then(response => {\n          var saveActionStatus = response;\n          this.$emit('employeeSaved', saveActionStatus);\n        });\n      } else if (this.submitMode == \"create\") {\n        let newEmployee = {\n          employeeCode: this.formModel.employeeCode,\n          employeeFullName: this.formModel.employeeFullName,\n          designation: this.formModel.designation,\n          monthlySalary: this.formModel.monthlySalary,\n          creationDate: Date.now()\n        };\n        createEmployee(newEmployee).then(response => {\n          var createdEmployee = response;\n          this.$emit('saved', createdEmployee);\n        });\n      }\n    },\n    cancelForm() {\n      this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(this.entityListingUrl);\n    }\n  }\n};","map":{"version":3,"names":["EmployeeFormSchema","createEmployee","updateEmployee","name","props","data","entityListingUrl","formSchema","formOptions","validateAfterChanged","loadedEmployeeId","isSaving","formModel","employeeCode","employeeFullName","designation","monthlySalary","created","JSON","parse","stringify","formData","_id","methods","submitForm","submitMode","then","response","saveActionStatus","$emit","newEmployee","creationDate","Date","now","createdEmployee","cancelForm","$router","push"],"sources":["src/pages/referenceData/forms/EmployeeForm.vue"],"sourcesContent":["<template>\n    <div class=\"tables col-md-12 app-crud-form py-4 my-2\">\n        <form action=\"\" @submit.prevent=\"submitForm\">\n            <vue-form-generator tag=\"div\" :schema=\"formSchema\" :options=\"formOptions\" :model=\"formModel\"/>\n            <div class=\"d-flex justify-content-end mt-3 pr-4\">\n                <button v-on:click=\"cancelForm\" type=\"button\" class=\"btn btn-secondary btn-md\">\n                        Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-md\">\n                    {{ isSaving ? 'Saving...' : 'Save' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script scoped lang=\"js\">\n\nimport EmployeeFormSchema from './schemas/EmployeeFormSchema';\nimport { createEmployee, updateEmployee } from '@/services/EmployeeService';\n\nexport default {\n    name: 'EmployeeForm',\n    props: [\n        \"formData\",\n        \"submitMode\"\n    ],\n    data: function () {\n        return {\n            entityListingUrl: \"/referenceData/employees\",\n            formSchema: EmployeeFormSchema,\n            formOptions: {\n                validateAfterChanged: true\n            },\n            loadedEmployeeId: \"\",\n            isSaving: false,\n            formModel: {\n                employeeCode: \"\",\n                employeeFullName: \"\",\n                designation: \"\",\n                monthlySalary: \"\"\n            }\n        }\n    },\n    created() {\n        this.formModel = JSON.parse(JSON.stringify(this.formData));\n        this.loadedEmployeeId = this.formData._id;\n    },\n    methods: {\n        submitForm() {\n            // submit form data to the backend - entity - Employee\n            if(this.submitMode==\"update\") {\n                updateEmployee(this.loadedEmployeeId, this.formModel).then(response => {\n                    var saveActionStatus = response;\n                    this.$emit('employeeSaved', saveActionStatus);\n                });\n            } else if (this.submitMode == \"create\") {\n                let newEmployee = {\n                    employeeCode: this.formModel.employeeCode,\n                    employeeFullName: this.formModel.employeeFullName,\n                    designation: this.formModel.designation,\n                    monthlySalary: this.formModel.monthlySalary,\n                    creationDate: Date.now()\n                };\n                createEmployee(newEmployee).then(response => {\n                    var createdEmployee = response;\n                    this.$emit('saved', createdEmployee);\n                });\n            }\n        },\n        cancelForm() {\n            this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(this.entityListingUrl);\n        }\n    }\n}\n</script>\n"],"mappings":";AAkBA,OAAAA,kBAAA;AACA,SAAAC,cAAA,EAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,KAAA,GACA,YACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,gBAAA;MACAC,UAAA,EAAAP,kBAAA;MACAQ,WAAA;QACAC,oBAAA;MACA;MACAC,gBAAA;MACAC,QAAA;MACAC,SAAA;QACAC,YAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,aAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAL,SAAA,GAAAM,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAC,QAAA;IACA,KAAAX,gBAAA,QAAAW,QAAA,CAAAC,GAAA;EACA;EACAC,OAAA;IACAC,WAAA;MACA;MACA,SAAAC,UAAA;QACAvB,cAAA,MAAAQ,gBAAA,OAAAE,SAAA,EAAAc,IAAA,CAAAC,QAAA;UACA,IAAAC,gBAAA,GAAAD,QAAA;UACA,KAAAE,KAAA,kBAAAD,gBAAA;QACA;MACA,gBAAAH,UAAA;QACA,IAAAK,WAAA;UACAjB,YAAA,OAAAD,SAAA,CAAAC,YAAA;UACAC,gBAAA,OAAAF,SAAA,CAAAE,gBAAA;UACAC,WAAA,OAAAH,SAAA,CAAAG,WAAA;UACAC,aAAA,OAAAJ,SAAA,CAAAI,aAAA;UACAe,YAAA,EAAAC,IAAA,CAAAC,GAAA;QACA;QACAhC,cAAA,CAAA6B,WAAA,EAAAJ,IAAA,CAAAC,QAAA;UACA,IAAAO,eAAA,GAAAP,QAAA;UACA,KAAAE,KAAA,UAAAK,eAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAAV,UAAA,oBAAAI,KAAA,sBAAAO,OAAA,CAAAC,IAAA,MAAA/B,gBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
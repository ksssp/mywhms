{"ast":null,"code":"import { VueFormGenerator } from \"vue-form-generator\";\nimport { getAllTrademarks } from '@/services/TrademarkService';\nexport default {\n  fields: [{\n    type: 'input',\n    inputType: 'text',\n    label: 'Lot Number',\n    model: 'lotNumber',\n    required: true,\n    validator: ['string', 'required']\n  }, {\n    type: 'select',\n    label: 'Trademark',\n    model: 'trademark',\n    required: true,\n    values: function () {\n      let trademarkOptions = [];\n      // getAllTrademarks().then(response => {\n      //     const items = response;\n      //     items.forEach(item => {\n      //         trademarkOptions.push({\n      //             \"value\": item,\n      //             \"text\": item.trademarkName + \" ( \" + item.customerName + \" )\"\n      //         })\n      //     });                    \n      // });\n      return trademarkOptions;\n    },\n    selectOptions: {\n      noneSelectedText: \"Select Trademark\",\n      value: \"_id\"\n    },\n    validator: ['required']\n  }, {\n    type: 'select',\n    label: 'Product',\n    model: 'product',\n    required: true,\n    values: [],\n    selectOptions: {\n      noneSelectedText: \"Select Product\",\n      value: \"_id\"\n    },\n    validator: ['required']\n  }, {\n    type: 'input',\n    inputType: 'text',\n    label: 'Lodged Bags',\n    model: 'numBagsLodged',\n    required: true,\n    validator: ['integer', 'required']\n  }, {\n    type: 'input',\n    inputType: 'text',\n    label: 'Kata Coolie Bags',\n    model: 'numBagsKataCoolie',\n    required: true,\n    validator: ['integer', 'required']\n  }, {\n    type: 'input',\n    inputType: 'text',\n    label: 'Locations',\n    model: 'locations',\n    required: true,\n    validator: ['string', 'required']\n  }]\n};","map":{"version":3,"names":["VueFormGenerator","getAllTrademarks","fields","type","inputType","label","model","required","validator","values","trademarkOptions","selectOptions","noneSelectedText","value"],"sources":["/Users/phanikrovvidi/Library/CloudStorage/Box-Box/Phani.Krovvidi/Personal/programming/coldsoft/client/src/components/forms/schemas/SchemaLodgement.js"],"sourcesContent":["\nimport { VueFormGenerator } from \"vue-form-generator\";\nimport { getAllTrademarks } from '@/services/TrademarkService';\n\nexport default {\n    fields: [\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Lot Number',\n            model: 'lotNumber',\n            required: true,\n            validator: ['string', 'required']\n        },\n        {\n            type: 'select',\n            label: 'Trademark',\n            model: 'trademark',\n            required: true,\n            values: function() {\n                let trademarkOptions=[];\n                // getAllTrademarks().then(response => {\n                //     const items = response;\n                //     items.forEach(item => {\n                //         trademarkOptions.push({\n                //             \"value\": item,\n                //             \"text\": item.trademarkName + \" ( \" + item.customerName + \" )\"\n                //         })\n                //     });                    \n                // });\n                return trademarkOptions;\n            },\n            selectOptions: {\n                noneSelectedText: \"Select Trademark\",\n                value: \"_id\"\n            },\n            validator: ['required']\n\n        },\n        {\n            type: 'select',\n            label: 'Product',\n            model: 'product',\n            required: true,\n            values: [],\n            selectOptions: {\n                noneSelectedText: \"Select Product\",\n                value: \"_id\"\n            },\n            validator: ['required']\n        },\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Lodged Bags',\n            model: 'numBagsLodged',\n            required: true,\n            validator: ['integer', 'required']\n        },\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Kata Coolie Bags',\n            model: 'numBagsKataCoolie',\n            required: true,\n            validator: ['integer', 'required']\n        },\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Locations',\n            model: 'locations',\n            required: true,\n            validator: ['string', 'required']\n        }\n    ]\n}"],"mappings":"AACA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,eAAe;EACXC,MAAM,EAAE,CACJ;IACIC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,WAAW;IAClBC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,CAAC,QAAQ,EAAE,UAAU;EACpC,CAAC,EACD;IACIL,IAAI,EAAE,QAAQ;IACdE,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE,WAAW;IAClBC,QAAQ,EAAE,IAAI;IACdE,MAAM,EAAE,SAAAA,CAAA,EAAW;MACf,IAAIC,gBAAgB,GAAC,EAAE;MACvB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAOA,gBAAgB;IAC3B,CAAC;IACDC,aAAa,EAAE;MACXC,gBAAgB,EAAE,kBAAkB;MACpCC,KAAK,EAAE;IACX,CAAC;IACDL,SAAS,EAAE,CAAC,UAAU;EAE1B,CAAC,EACD;IACIL,IAAI,EAAE,QAAQ;IACdE,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,IAAI;IACdE,MAAM,EAAE,EAAE;IACVE,aAAa,EAAE;MACXC,gBAAgB,EAAE,gBAAgB;MAClCC,KAAK,EAAE;IACX,CAAC;IACDL,SAAS,EAAE,CAAC,UAAU;EAC1B,CAAC,EACD;IACIL,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE,eAAe;IACtBC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,CAAC,SAAS,EAAE,UAAU;EACrC,CAAC,EACD;IACIL,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,kBAAkB;IACzBC,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,CAAC,SAAS,EAAE,UAAU;EACrC,CAAC,EACD;IACIL,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE,WAAW;IAClBC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,CAAC,QAAQ,EAAE,UAAU;EACpC,CAAC;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
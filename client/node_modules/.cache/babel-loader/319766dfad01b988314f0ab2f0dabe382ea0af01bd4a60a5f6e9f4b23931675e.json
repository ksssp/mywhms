{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EmployeeFormSchema from './schemas/EmployeeFormSchema';\nimport { createEmployee, updateEmployee } from '@/services/EmployeeService';\nexport default {\n  name: 'EmployeeForm',\n  props: [\"formData\", \"submitMode\"],\n  data: function () {\n    return {\n      formSchema: EmployeeFormSchema,\n      formOptions: {\n        validateAfterChanged: true\n      },\n      loadedEmployeeId: \"\",\n      isSaving: false,\n      formModel: {\n        employeeCode: \"\",\n        employeeFullName: \"\",\n        designation: \"\",\n        monthlySalary: \"\"\n      }\n    };\n  },\n  created() {\n    this.formModel.employeeCode = this.formData.employeeCode;\n    this.formModel.employeeFullName = this.formData.employeeFullName;\n    this.formModel.designation = this.formData.designation;\n    this.formModel.monthlySalary = this.formData.monthlySalary;\n    this.loadedEmployeeId = this.formData._id;\n  },\n  methods: {\n    submitEmployeeDetails() {\n      if (this.submitMode == \"update\") {\n        updateEmployee(this.loadedEmployeeId, this.formModel).then(response => {\n          var saveActionStatus = response;\n          this.$emit('employeeSaved', saveActionStatus);\n        });\n      } else if (this.submitMode == \"create\") {\n        console.log(\"Create Employee : \", this.formModel);\n        let newEmployee = {\n          employeeCode: this.formModel.employeeCode,\n          employeeFullName: this.formModel.employeeFullName,\n          designation: this.formModel.designation,\n          monthlySalary: this.formModel.monthlySalary,\n          creationDate: Date.now()\n        };\n        createEmployee(newEmployee).then(response => {\n          var createdEmployee = response;\n          this.$emit('saved', createdEmployee);\n        });\n      }\n    },\n    cancelForm() {\n      this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(\"/referenceData/employees\");\n    }\n  }\n};","map":{"version":3,"names":["EmployeeFormSchema","createEmployee","updateEmployee","name","props","data","formSchema","formOptions","validateAfterChanged","loadedEmployeeId","isSaving","formModel","employeeCode","employeeFullName","designation","monthlySalary","created","formData","_id","methods","submitEmployeeDetails","submitMode","then","response","saveActionStatus","$emit","console","log","newEmployee","creationDate","Date","now","createdEmployee","cancelForm","$router","push"],"sources":["src/pages/referenceData/forms/EmployeeForm.vue"],"sourcesContent":["<template>\n    <div class=\"tables col-md-12 app-crud-form py-4 my-2\">\n        <form action=\"\" @submit.prevent=\"submitEmployeeDetails\">\n            <vue-form-generator tag=\"div\" :schema=\"formSchema\" :options=\"formOptions\" :model=\"formModel\"/>\n            <div class=\"d-flex justify-content-end mt-3 pr-4\">\n                <button v-on:click=\"cancelForm\" type=\"button\" class=\"btn btn-secondary btn-md\">\n                        Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-md\">\n                    {{ isSaving ? 'Saving...' : 'Save' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script scoped lang=\"js\">\n\nimport EmployeeFormSchema from './schemas/EmployeeFormSchema';\nimport { createEmployee, updateEmployee } from '@/services/EmployeeService';\n\nexport default {\n    name: 'EmployeeForm',\n    props: [\n        \"formData\",\n        \"submitMode\"\n    ],\n    data: function () {\n        return {\n            formSchema: EmployeeFormSchema,\n            formOptions: {\n                validateAfterChanged: true\n            },\n            loadedEmployeeId: \"\",\n            isSaving: false,\n            formModel: {\n                employeeCode: \"\",\n                employeeFullName: \"\",\n                designation: \"\",\n                monthlySalary: \"\"\n            }\n        }\n    },\n    created() {\n        this.formModel.employeeCode = this.formData.employeeCode;\n        this.formModel.employeeFullName = this.formData.employeeFullName;\n        this.formModel.designation = this.formData.designation;\n        this.formModel.monthlySalary = this.formData.monthlySalary;\n        this.loadedEmployeeId = this.formData._id;\n    },\n    methods: {\n        submitEmployeeDetails() {\n            if(this.submitMode==\"update\") {\n                updateEmployee(this.loadedEmployeeId, this.formModel).then(response => {\n                    var saveActionStatus = response;\n                    this.$emit('employeeSaved', saveActionStatus);\n                });\n            } else if (this.submitMode == \"create\") {\n                console.log(\"Create Employee : \", this.formModel);\n                let newEmployee = {\n                    employeeCode: this.formModel.employeeCode,\n                    employeeFullName: this.formModel.employeeFullName,\n                    designation: this.formModel.designation,\n                    monthlySalary: this.formModel.monthlySalary,\n                    creationDate: Date.now()\n                };\n                createEmployee(newEmployee).then(response => {\n                    var createdEmployee = response;\n                    this.$emit('saved', createdEmployee);\n                });\n            }\n        },\n        cancelForm() {\n            this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(\"/referenceData/employees\");\n        }\n    }\n}\n</script>\n"],"mappings":";AAkBA,OAAAA,kBAAA;AACA,SAAAC,cAAA,EAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,KAAA,GACA,YACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,UAAA,EAAAN,kBAAA;MACAO,WAAA;QACAC,oBAAA;MACA;MACAC,gBAAA;MACAC,QAAA;MACAC,SAAA;QACAC,YAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,aAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAL,SAAA,CAAAC,YAAA,QAAAK,QAAA,CAAAL,YAAA;IACA,KAAAD,SAAA,CAAAE,gBAAA,QAAAI,QAAA,CAAAJ,gBAAA;IACA,KAAAF,SAAA,CAAAG,WAAA,QAAAG,QAAA,CAAAH,WAAA;IACA,KAAAH,SAAA,CAAAI,aAAA,QAAAE,QAAA,CAAAF,aAAA;IACA,KAAAN,gBAAA,QAAAQ,QAAA,CAAAC,GAAA;EACA;EACAC,OAAA;IACAC,sBAAA;MACA,SAAAC,UAAA;QACAnB,cAAA,MAAAO,gBAAA,OAAAE,SAAA,EAAAW,IAAA,CAAAC,QAAA;UACA,IAAAC,gBAAA,GAAAD,QAAA;UACA,KAAAE,KAAA,kBAAAD,gBAAA;QACA;MACA,gBAAAH,UAAA;QACAK,OAAA,CAAAC,GAAA,4BAAAhB,SAAA;QACA,IAAAiB,WAAA;UACAhB,YAAA,OAAAD,SAAA,CAAAC,YAAA;UACAC,gBAAA,OAAAF,SAAA,CAAAE,gBAAA;UACAC,WAAA,OAAAH,SAAA,CAAAG,WAAA;UACAC,aAAA,OAAAJ,SAAA,CAAAI,aAAA;UACAc,YAAA,EAAAC,IAAA,CAAAC,GAAA;QACA;QACA9B,cAAA,CAAA2B,WAAA,EAAAN,IAAA,CAAAC,QAAA;UACA,IAAAS,eAAA,GAAAT,QAAA;UACA,KAAAE,KAAA,UAAAO,eAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAAZ,UAAA,oBAAAI,KAAA,sBAAAS,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
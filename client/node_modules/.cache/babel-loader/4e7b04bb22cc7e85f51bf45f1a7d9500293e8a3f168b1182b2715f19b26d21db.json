{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { VueFormGenerator } from \"vue-form-generator\";\nexport default {\n  fields: [{\n    type: 'input',\n    inputType: 'text',\n    label: 'Lot Number',\n    model: 'lotNumber',\n    required: true,\n    validator: ['string', 'required']\n  }, {\n    type: 'select',\n    label: 'Trademark',\n    model: 'trademark',\n    required: true,\n    values: [],\n    selectOptions: {\n      noneSelectedText: \"Select Trademark\",\n      value: \"_id\"\n    },\n    validator: ['required']\n  }, {\n    type: 'select',\n    label: 'Product',\n    model: 'product',\n    required: true,\n    values: function () {\n      let trademarkOptions = [];\n      getAllTrademarks().then(response => {\n        const items = response;\n        items.forEach(item => {\n          trademarkOptions.push({\n            \"value\": item,\n            \"text\": item.trademarkName + \" ( \" + item.customerName + \" )\"\n          });\n        });\n      });\n    },\n    selectOptions: {\n      noneSelectedText: \"Select Product\",\n      value: \"_id\"\n    },\n    validator: ['required']\n  }, {\n    type: 'input',\n    inputType: 'text',\n    label: 'Lodged Bags',\n    model: 'numBagsLodged',\n    required: true,\n    validator: ['integer', 'required']\n  }, {\n    type: 'input',\n    inputType: 'text',\n    label: 'Kata Coolie Bags',\n    model: 'numBagsKataCoolie',\n    required: true,\n    validator: ['integer', 'required']\n  }, {\n    type: 'input',\n    inputType: 'text',\n    label: 'Locations',\n    model: 'locations',\n    required: true,\n    validator: ['string', 'required']\n  }]\n};","map":{"version":3,"names":["VueFormGenerator","fields","type","inputType","label","model","required","validator","values","selectOptions","noneSelectedText","value","trademarkOptions","getAllTrademarks","then","response","items","forEach","item","push","trademarkName","customerName"],"sources":["src/components/forms/schemas/SchemaLodgement.vue"],"sourcesContent":["\n\n\n\n<script>\nimport { VueFormGenerator } from \"vue-form-generator\";\n\nexport default {\n    fields: [\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Lot Number',\n            model: 'lotNumber',\n            required: true,\n            validator: ['string', 'required']\n        },\n        {\n            type: 'select',\n            label: 'Trademark',\n            model: 'trademark',\n            required: true,\n            values: [],\n            selectOptions: {\n                noneSelectedText: \"Select Trademark\",\n                value: \"_id\"\n            },\n            validator: ['required']\n\n        },\n        {\n            type: 'select',\n            label: 'Product',\n            model: 'product',\n            required: true,\n            values: function() {\n                let trademarkOptions=[];\n                getAllTrademarks().then(response => {\n                    const items = response;\n                    items.forEach(item => {\n                        trademarkOptions.push({\n                            \"value\": item,\n                            \"text\": item.trademarkName + \" ( \" + item.customerName + \" )\"\n                        })\n                    });                    \n                });\n            },\n            selectOptions: {\n                noneSelectedText: \"Select Product\",\n                value: \"_id\"\n            },\n            validator: ['required']\n        },\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Lodged Bags',\n            model: 'numBagsLodged',\n            required: true,\n            validator: ['integer', 'required']\n        },\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Kata Coolie Bags',\n            model: 'numBagsKataCoolie',\n            required: true,\n            validator: ['integer', 'required']\n        },\n        {\n            type: 'input',\n            inputType: 'text',\n            label: 'Locations',\n            model: 'locations',\n            required: true,\n            validator: ['string', 'required']\n        }\n    ]\n}\n</script>"],"mappings":";AAKA,SAAAA,gBAAA;AAEA;EACAC,MAAA,GACA;IACAC,IAAA;IACAC,SAAA;IACAC,KAAA;IACAC,KAAA;IACAC,QAAA;IACAC,SAAA;EACA,GACA;IACAL,IAAA;IACAE,KAAA;IACAC,KAAA;IACAC,QAAA;IACAE,MAAA;IACAC,aAAA;MACAC,gBAAA;MACAC,KAAA;IACA;IACAJ,SAAA;EAEA,GACA;IACAL,IAAA;IACAE,KAAA;IACAC,KAAA;IACAC,QAAA;IACAE,MAAA,WAAAA,CAAA;MACA,IAAAI,gBAAA;MACAC,gBAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,MAAAC,KAAA,GAAAD,QAAA;QACAC,KAAA,CAAAC,OAAA,CAAAC,IAAA;UACAN,gBAAA,CAAAO,IAAA;YACA,SAAAD,IAAA;YACA,QAAAA,IAAA,CAAAE,aAAA,WAAAF,IAAA,CAAAG,YAAA;UACA;QACA;MACA;IACA;IACAZ,aAAA;MACAC,gBAAA;MACAC,KAAA;IACA;IACAJ,SAAA;EACA,GACA;IACAL,IAAA;IACAC,SAAA;IACAC,KAAA;IACAC,KAAA;IACAC,QAAA;IACAC,SAAA;EACA,GACA;IACAL,IAAA;IACAC,SAAA;IACAC,KAAA;IACAC,KAAA;IACAC,QAAA;IACAC,SAAA;EACA,GACA;IACAL,IAAA;IACAC,SAAA;IACAC,KAAA;IACAC,KAAA;IACAC,QAAA;IACAC,SAAA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
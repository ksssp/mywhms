{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport { validationMixin } from 'vuelidate';\nimport { required, minValue, alpha, minLength, numeric, decimal } from 'vuelidate/lib/validators';\nimport { getAllProducts } from '@/services/ProductService';\nimport { getAllTrademarks } from '@/services/TrademarkService';\nimport lodgementSchema from './schemas/schemaLodgement';\nexport default {\n  name: 'CreateLodgementWizardNew',\n  mixins: [validationMixin],\n  components: {\n    FormWizard,\n    TabContent\n  },\n  data: function () {\n    return {\n      wizardProps: {\n        title: \"\",\n        subTitle: \"\",\n        finishButtonText: \"Save\",\n        stepSize: \"sm\",\n        stepShape: \"circle\",\n        color: \"#51abe4\"\n      },\n      formData: {\n        schema: lodgementSchema,\n        model: {\n          _id: null,\n          lotNumber: null,\n          trademark: null,\n          product: null,\n          numBagsLodged: null,\n          numBagsKataCoolie: null,\n          locations: null\n          // vehicleNumber: null,\n          // driverName: null\n        },\n\n        formOptions: {\n          validateAfterChanged: true\n        }\n      },\n      trademarkOptions: [],\n      productOptions: [],\n      selectedTrademark: {\n        _id: \"\",\n        trademarkName: \"\",\n        customerName: \"\",\n        mobileNumber: \"\",\n        town: \"\"\n      },\n      selectedProduct: {\n        _id: \"\",\n        prouctName: \"\",\n        productSubGrouPrefix: \"\",\n        bagSize: 0,\n        hamaliPerBag: 0,\n        mamulluPerBag: 0,\n        insurancePerBag: 0,\n        kataCooliePerBag: 0,\n        platformCooliePerBag: 0\n      },\n      trademarkInfoTable: {\n        fields: [{\n          key: \"infoLabel\",\n          label: \"Trademark Information\",\n          sortable: false\n        }, {\n          key: \"infoValue\",\n          label: \"\",\n          sortable: false,\n          style: \"word-wrap: break-word;\"\n        }],\n        items: [{\n          infoLabel: \"Trademark Name\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Customer Name\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Town/Village\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Mobile Number\",\n          infoValue: \"\"\n        }]\n      },\n      productInfoTable: {\n        fields: [{\n          key: \"infoLabel\",\n          label: \"Product Information\",\n          sortable: false\n        }, {\n          key: \"infoValue\",\n          label: \"\",\n          sortable: false,\n          style: \"word-wrap: break-word;\"\n        }],\n        items: [{\n          infoLabel: \"Product Sub Group\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Bag Size\",\n          infoValue: \"\"\n        }]\n      }\n    };\n  },\n  methods: {\n    prepareProductOption(item, index) {\n      this.productOptions.push({\n        \"value\": item,\n        \"text\": item.productName\n      });\n    },\n    prepareTrademarkOption(item, index) {\n      this.trademarkOptions.push({\n        \"value\": item,\n        \"text\": item.trademarkName + \" ( \" + item.customerName + \" )\"\n      });\n    },\n    updateSelectedProduct(option) {\n      this.selectedProduct = option;\n      this.productInfoTable.items[0].infoValue = this.selectedProduct.productSubGroupPrefix;\n      this.productInfoTable.items[1].infoValue = this.selectedProduct.bagSize + \" Kgs\";\n    },\n    updateSelectedTrademark(option) {\n      this.selectedTrademark = option;\n      this.trademarkInfoTable.items[0].infoValue = this.selectedTrademark.trademarkName;\n      this.trademarkInfoTable.items[1].infoValue = this.selectedTrademark.customerName;\n      this.trademarkInfoTable.items[2].infoValue = this.selectedTrademark.town;\n      this.trademarkInfoTable.items[3].infoValue = this.selectedTrademark.mobileNumber;\n    },\n    onComplete: function () {\n      alert('New Lodgement Created!');\n    }\n  },\n  mounted() {\n    getAllProducts().then(response => {\n      const items = response;\n      items.forEach(this.prepareProductOption);\n    });\n    getAllTrademarks().then(response => {\n      const items = response;\n      items.forEach(this.prepareTrademarkOption);\n    });\n  }\n};","map":{"version":3,"names":["FormWizard","TabContent","validationMixin","required","minValue","alpha","minLength","numeric","decimal","getAllProducts","getAllTrademarks","lodgementSchema","name","mixins","components","data","wizardProps","title","subTitle","finishButtonText","stepSize","stepShape","color","formData","schema","model","_id","lotNumber","trademark","product","numBagsLodged","numBagsKataCoolie","locations","formOptions","validateAfterChanged","trademarkOptions","productOptions","selectedTrademark","trademarkName","customerName","mobileNumber","town","selectedProduct","prouctName","productSubGrouPrefix","bagSize","hamaliPerBag","mamulluPerBag","insurancePerBag","kataCooliePerBag","platformCooliePerBag","trademarkInfoTable","fields","key","label","sortable","style","items","infoLabel","infoValue","productInfoTable","methods","prepareProductOption","item","index","push","productName","prepareTrademarkOption","updateSelectedProduct","option","productSubGroupPrefix","updateSelectedTrademark","onComplete","alert","mounted","then","response","forEach"],"sources":["src/components/forms/CreateLodgementNew.vue"],"sourcesContent":["<template>\n    <section class=\"wizard\">\n        <div class=\"page-header\">\n            <h3 class=\"page-title\">\n                Create new Lodgement\n            </h3>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a href=\"javascript:void(0);\">Inventory</a></li>\n                    <li class=\"breadcrumb-item\"><a href=\"/inventory/lodgements\">Lodgements</a></li>\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Create</li>\n                </ol>\n            </nav>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-body custom-wizard\">\n                        <form-wizard id=\"wizard-form\" :title=\"wizardProps.title\" :subtitle=\"wizardProps.subTitle\"\n                            :finish-button-text=\"wizardProps.finishButtonText\" :step-size=\"wizardProps.stepSize\"\n                            :shape=\"wizardProps.stepShape\" :color=\"wizardProps.color\">\n                            <tab-content title=\"Lodgement details\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <form action=\"\" @submit.prevent=\"createLodgement\">\n                                            <vue-form-generator tag=\"div\" :schema=\"formData.schema\" \n                                                :options=\"formData.formOptions\" :model=\"formData.model\" />\n                                        </form>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"card\">\n                                            <div class=\"card-body\">\n                                                <b-table-lite responsive fixed :fields=\"trademarkInfoTable.fields\"\n                                                    :items=\"trademarkInfoTable.items\">\n                                                </b-table-lite>\n                                                <br />\n                                                <b-table-lite responsive fixed :fields=\"productInfoTable.fields\"\n                                                    :items=\"productInfoTable.items\">\n                                                </b-table-lite>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </tab-content>\n                            <tab-content title=\"Charges & Payments\">\n                                Tab for charges and payments\n                            </tab-content>\n                            <tab-content title=\"Confirm\">\n                                Yuhuuu! This seems pretty damn simple\n                            </tab-content>\n                        </form-wizard>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport { validationMixin } from 'vuelidate';\nimport { required, minValue, alpha, minLength, numeric, decimal } from 'vuelidate/lib/validators';\nimport { getAllProducts } from '@/services/ProductService';\nimport { getAllTrademarks } from '@/services/TrademarkService';\n\nimport lodgementSchema from './schemas/schemaLodgement';\n\nexport default {\n    name: 'CreateLodgementWizardNew',\n    mixins: [validationMixin],\n    components: {\n        FormWizard,\n        TabContent\n    },\n    data: function () {\n        return {\n            wizardProps: {\n                title: \"\",\n                subTitle: \"\",\n                finishButtonText: \"Save\",\n                stepSize: \"sm\",\n                stepShape: \"circle\",\n                color: \"#51abe4\"\n            },\n            formData: {\n                schema: lodgementSchema,\n                model: {\n                    _id: null,\n                    lotNumber: null,\n                    trademark: null,\n                    product: null,\n                    numBagsLodged: null,\n                    numBagsKataCoolie: null,\n                    locations: null,\n                    // vehicleNumber: null,\n                    // driverName: null\n                },\n                formOptions: {\n                    validateAfterChanged: true\n                },\n            },\n            trademarkOptions: [],\n            productOptions: [],\n            selectedTrademark: {\n                _id: \"\",\n                trademarkName: \"\",\n                customerName: \"\",\n                mobileNumber: \"\",\n                town: \"\"\n            },\n            selectedProduct: {\n                _id: \"\",\n                prouctName: \"\",\n                productSubGrouPrefix: \"\",\n                bagSize: 0,\n                hamaliPerBag: 0,\n                mamulluPerBag: 0,\n                insurancePerBag: 0,\n                kataCooliePerBag: 0,\n                platformCooliePerBag: 0\n            },\n            trademarkInfoTable: {\n                fields: [\n                    { key: \"infoLabel\", label: \"Trademark Information\", sortable: false },\n                    { key: \"infoValue\", label: \"\", sortable: false, style: \"word-wrap: break-word;\" }\n                ],\n                items: [\n                    { infoLabel: \"Trademark Name\", infoValue: \"\" },\n                    { infoLabel: \"Customer Name\", infoValue: \"\" },\n                    { infoLabel: \"Town/Village\", infoValue: \"\" },\n                    { infoLabel: \"Mobile Number\", infoValue: \"\" }\n                ]\n            },\n            productInfoTable: {\n                fields: [\n                    { key: \"infoLabel\", label: \"Product Information\", sortable: false },\n                    { key: \"infoValue\", label: \"\", sortable: false, style: \"word-wrap: break-word;\" }\n                ],\n                items: [\n                    { infoLabel: \"Product Sub Group\", infoValue: \"\" },\n                    { infoLabel: \"Bag Size\", infoValue: \"\" }\n                ]\n            }\n        }\n    },\n    methods: {\n        prepareProductOption(item, index) {\n            this.productOptions.push({\n                \"value\": item,\n                \"text\": item.productName\n            })\n        },\n        prepareTrademarkOption(item, index) {\n            this.trademarkOptions.push({\n                \"value\": item,\n                \"text\": item.trademarkName + \" ( \" + item.customerName + \" )\"\n            })\n        },\n        updateSelectedProduct(option) {\n            this.selectedProduct = option;\n            this.productInfoTable.items[0].infoValue = this.selectedProduct.productSubGroupPrefix;\n            this.productInfoTable.items[1].infoValue = this.selectedProduct.bagSize + \" Kgs\";\n        },\n        updateSelectedTrademark(option) {\n            this.selectedTrademark = option;\n            this.trademarkInfoTable.items[0].infoValue = this.selectedTrademark.trademarkName;\n            this.trademarkInfoTable.items[1].infoValue = this.selectedTrademark.customerName;\n            this.trademarkInfoTable.items[2].infoValue = this.selectedTrademark.town;\n            this.trademarkInfoTable.items[3].infoValue = this.selectedTrademark.mobileNumber;\n        },\n        onComplete: function () {\n            alert('New Lodgement Created!');\n        }\n    },\n    mounted() {\n        getAllProducts().then(response => {\n            const items = response;\n            items.forEach(this.prepareProductOption);\n        });\n        getAllTrademarks().then(response => {\n            const items = response;\n            items.forEach(this.prepareTrademarkOption);\n        });\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
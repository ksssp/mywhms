{"ast":null,"code":"const axios = require('axios');\nexport async function getAllProductGroups() {\n  const response = await fetch('/api/referenceData/productGroups');\n  return await response.json();\n}\nexport async function getProductGroupById(productGroupId) {\n  const response = await fetch('/api/referenceData/productGroups/' + productGroupId);\n  return await response.json();\n}\nexport async function createProductGroup(data) {\n  const response = await fetch(`/api/referenceData/productGroups/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      productGroup: data\n    })\n  });\n  return await response.json();\n}\nexport async function deleteProductGroup(productGroupId) {\n  const response = await fetch(`/api/referenceData/productGroups/${productGroupId}`, {\n    method: 'DELETE'\n  });\n  return await response.json();\n}\nexport async function updateProductGroup(data) {\n  const response = await fetch(`/api/referenceData/productGroups/${productGroupId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      productGroup: data\n    })\n  });\n  return await response.json();\n}","map":{"version":3,"names":["axios","require","getAllProductGroups","response","fetch","json","getProductGroupById","productGroupId","createProductGroup","data","method","headers","body","JSON","stringify","productGroup","deleteProductGroup","updateProductGroup"],"sources":["/Users/phanikrovvidi/Library/CloudStorage/Box-Box/Phani.Krovvidi/Personal/programming/coldsoft/client/src/services/ProductGroupService.js"],"sourcesContent":["const axios = require ( 'axios' );\n\nexport async function getAllProductGroups() {\n\n    const response = await fetch('/api/referenceData/productGroups');\n    return await response.json();\n}\n\nexport async function getProductGroupById(productGroupId) {\n    const response = await fetch('/api/referenceData/productGroups/'+productGroupId);\n    return await response.json();\n}\n\nexport async function createProductGroup(data) {\n    const response = await fetch(`/api/referenceData/productGroups/`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({productGroup: data})\n    })\n    return await response.json();\n}\n\nexport async function deleteProductGroup(productGroupId) {\n    const response = await fetch(`/api/referenceData/productGroups/${productGroupId}`, {method: 'DELETE'})\n    return await response.json();\n}\n\nexport async function updateProductGroup(data) {\n    const response = await fetch(`/api/referenceData/productGroups/${productGroupId}`, {\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({productGroup: data})\n    })\n    return await response.json();\n}"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAG,OAAO,CAAE;AAEjC,OAAO,eAAeC,mBAAmBA,CAAA,EAAG;EAExC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAChE,OAAO,MAAMD,QAAQ,CAACE,IAAI,EAAE;AAChC;AAEA,OAAO,eAAeC,mBAAmBA,CAACC,cAAc,EAAE;EACtD,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,GAACG,cAAc,CAAC;EAChF,OAAO,MAAMJ,QAAQ,CAACE,IAAI,EAAE;AAChC;AAEA,OAAO,eAAeG,kBAAkBA,CAACC,IAAI,EAAE;EAC3C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkC,EAAE;IAC9DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACC,YAAY,EAAEN;IAAI,CAAC;EAC7C,CAAC,CAAC;EACF,OAAO,MAAMN,QAAQ,CAACE,IAAI,EAAE;AAChC;AAEA,OAAO,eAAeW,kBAAkBA,CAACT,cAAc,EAAE;EACrD,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCG,cAAe,EAAC,EAAE;IAACG,MAAM,EAAE;EAAQ,CAAC,CAAC;EACtG,OAAO,MAAMP,QAAQ,CAACE,IAAI,EAAE;AAChC;AAEA,OAAO,eAAeY,kBAAkBA,CAACR,IAAI,EAAE;EAC3C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCG,cAAe,EAAC,EAAE;IAC/EG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACC,YAAY,EAAEN;IAAI,CAAC;EAC7C,CAAC,CAAC;EACF,OAAO,MAAMN,QAAQ,CAACE,IAAI,EAAE;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductFormSchema from './schemas/ProductFormSchema';\nimport { getAllProductGroups } from '@/services/ProductGroupService';\nimport { createProduct, updateProduct } from '@/services/ProductService';\nimport Multiselect from 'vue-multiselect';\nexport default {\n  name: 'ProductForm',\n  components: {\n    Multiselect\n  },\n  props: [\"formData\", \"submitMode\"],\n  data: function () {\n    return {\n      formSchema: ProductFormSchema,\n      formOptions: {\n        validateAfterChanged: true\n      },\n      loadedProductId: \"\",\n      isSaving: false,\n      formModel: {\n        productName: \"\",\n        productSubGroupPrefix: {\n          _id: \"\",\n          name: \"\"\n        },\n        bagSize: 0,\n        computedProductName: \"\",\n        hamaliPerBag: 0,\n        platformCooliePerBag: 0,\n        kataCooliePerBag: 0,\n        mamulluPerBag: 0,\n        insurancePerBag: 0,\n        monthlyRentPerBag: 0,\n        yearlyRentPerBag: 0,\n        yearlyRentPerKg: 0,\n        computedYearlyRentPerBag: 0\n      },\n      productGroupOptions: []\n    };\n  },\n  created() {\n    this.formModel = JSON.parse(JSON.stringify(this.formData));\n    this.loadedProductId = this.formData._id;\n    let productGroupField = this.formSchema.groups[0].fields.find(fields => fields.model === 'productSubGroupPrefix');\n    productGroupField.values = this.getProductGroupOptions();\n  },\n  methods: {\n    getProductGroupOptions() {\n      getAllProductGroups().then(response => {\n        let productGroups = response;\n        productGroups.forEach(this.addToProductGroupOptions);\n      });\n      return this.productGroupOptions;\n    },\n    addToProductGroupOptions(productGroup) {\n      this.productGroupOptions.push({\n        \"_id\": productGroup._id,\n        \"name\": productGroup.productSubGroupPrefix\n      });\n    },\n    submitProductDetails() {\n      let product = {\n        productName: this.formModel.productName,\n        productGroupId: this.formModel.productSubGroupPrefix._id,\n        productSubGroupPrefix: this.formModel.productSubGroupPrefix.name,\n        bagSize: this.formModel.bagSize,\n        computedProductName: this.formModel.computedProductName,\n        hamaliPerBag: this.formModel.hamaliPerBag,\n        platformCooliePerBag: this.formModel.platformCooliePerBag,\n        kataCooliePerBag: this.formModel.kataCooliePerBag,\n        mamulluPerBag: this.formModel.mamulluPerBag,\n        insurancePerBag: this.formModel.insurancePerBag,\n        monthlyRentPerBag: this.formModel.monthlyRentPerBag,\n        yearlyRentPerKg: this.formModel.yearlyRentPerKg,\n        computedYearlyRentPerBag: this.formModel.computedYearlyRentPerBag,\n        yearlyRentPerBag: this.formModel.yearlyRentPerBag\n      };\n      if (this.submitMode == \"update\") {\n        product._id = this.loadedProductId;\n        updateProduct(this.loadedProductId, product).then(response => {\n          var saveActionStatus = response;\n          this.$emit('productSaved', saveActionStatus);\n        });\n      } else if (this.submitMode == \"create\") {\n        product.creationDate = Date.now();\n        createProduct(product).then(response => {\n          var createdProduct = response;\n          this.$emit('productSaved', createdProduct);\n        });\n      }\n    },\n    cancelProductForm() {\n      this.$emit('productEditCancelled');\n    }\n  }\n};","map":{"version":3,"names":["ProductFormSchema","getAllProductGroups","createProduct","updateProduct","Multiselect","name","components","props","data","formSchema","formOptions","validateAfterChanged","loadedProductId","isSaving","formModel","productName","productSubGroupPrefix","_id","bagSize","computedProductName","hamaliPerBag","platformCooliePerBag","kataCooliePerBag","mamulluPerBag","insurancePerBag","monthlyRentPerBag","yearlyRentPerBag","yearlyRentPerKg","computedYearlyRentPerBag","productGroupOptions","created","JSON","parse","stringify","formData","productGroupField","groups","fields","find","model","values","getProductGroupOptions","methods","then","response","productGroups","forEach","addToProductGroupOptions","productGroup","push","submitProductDetails","product","productGroupId","submitMode","saveActionStatus","$emit","creationDate","Date","now","createdProduct","cancelProductForm"],"sources":["src/pages/referenceData/forms/ProductForm.vue"],"sourcesContent":["<template>\n    <div class=\"tables col-md-12 app-crud-form py-4 my-2\">\n        <form action=\"\" @submit.prevent=\"submitProductDetails\">\n            <vue-form-generator tag=\"div\" :schema=\"formSchema\" :options=\"formOptions\" :model=\"formModel\"/>\n            <div class=\"d-flex justify-content-end mt-3 pr-4\">\n                <button v-on:click=\"cancelProductForm\" type=\"button\" class=\"btn btn-secondary btn-md\">\n                        Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-md\">\n                    {{ isSaving ? 'Saving...' : 'Save' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script scoped lang=\"js\">\n\nimport ProductFormSchema from './schemas/ProductFormSchema';\nimport { getAllProductGroups } from '@/services/ProductGroupService';\nimport { createProduct, updateProduct } from '@/services/ProductService';\nimport Multiselect from 'vue-multiselect';\n\nexport default {\n    name: 'ProductForm',\n    components: {\n        Multiselect\n    },\n    props: [\n        \"formData\",\n        \"submitMode\"\n    ],\n    data: function () {\n        return {\n            formSchema: ProductFormSchema,\n            formOptions: {\n                validateAfterChanged: true\n            },\n            loadedProductId: \"\",\n            isSaving: false,\n            formModel: {\n                productName: \"\",\n                productSubGroupPrefix: { _id:\"\", name: \"\" },\n                bagSize: 0,\n                computedProductName: \"\",\n                hamaliPerBag: 0,\n                platformCooliePerBag: 0,\n                kataCooliePerBag: 0,\n                mamulluPerBag: 0,\n                insurancePerBag: 0,\n                monthlyRentPerBag: 0,\n                yearlyRentPerBag: 0,\n                yearlyRentPerKg: 0,\n                computedYearlyRentPerBag: 0\n            },\n            productGroupOptions: []\n        }\n    },\n    created() {\n        this.formModel = JSON.parse(JSON.stringify(this.formData));\n        this.loadedProductId = this.formData._id;\n        let productGroupField = this.formSchema.groups[0].fields.find(fields => fields.model==='productSubGroupPrefix');\n        productGroupField.values = this.getProductGroupOptions();\n    },\n    methods: {\n        getProductGroupOptions() {\n            getAllProductGroups().then(response => {\n                let productGroups = response;\n                productGroups.forEach(this.addToProductGroupOptions);\n            });\n            return this.productGroupOptions;\n        },\n        addToProductGroupOptions(productGroup) {\n            this.productGroupOptions.push({\n                \"_id\": productGroup._id,\n                \"name\": productGroup.productSubGroupPrefix\n            });\n        },\n        submitProductDetails() {\n            let product = {\n                productName: this.formModel.productName,\n                productGroupId: this.formModel.productSubGroupPrefix._id,\n                productSubGroupPrefix: this.formModel.productSubGroupPrefix.name,\n                bagSize: this.formModel.bagSize,\n                computedProductName: this.formModel.computedProductName,\n                hamaliPerBag: this.formModel.hamaliPerBag,\n                platformCooliePerBag: this.formModel.platformCooliePerBag,\n                kataCooliePerBag: this.formModel.kataCooliePerBag,\n                mamulluPerBag: this.formModel.mamulluPerBag,\n                insurancePerBag: this.formModel.insurancePerBag,\n                monthlyRentPerBag: this.formModel.monthlyRentPerBag,\n                yearlyRentPerKg: this.formModel.yearlyRentPerKg,\n                computedYearlyRentPerBag: this.formModel.computedYearlyRentPerBag,\n                yearlyRentPerBag: this.formModel.yearlyRentPerBag\n            };\n            \n            if(this.submitMode==\"update\") {\n                product._id = this.loadedProductId;\n                updateProduct(this.loadedProductId, product).then(response => {\n                    var saveActionStatus = response;\n                    this.$emit('productSaved', saveActionStatus);\n                });\n            } else if (this.submitMode == \"create\") {\n                product.creationDate = Date.now();\n                createProduct(product).then(response => {\n                    var createdProduct = response;\n                    this.$emit('productSaved', createdProduct);\n                });\n            }\n        },\n        cancelProductForm() {\n            this.$emit('productEditCancelled');\n        }\n    }\n}\n</script>"],"mappings":";AAkBA,OAAAA,iBAAA;AACA,SAAAC,mBAAA;AACA,SAAAC,aAAA,EAAAC,aAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA,GACA,YACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,UAAA,EAAAT,iBAAA;MACAU,WAAA;QACAC,oBAAA;MACA;MACAC,eAAA;MACAC,QAAA;MACAC,SAAA;QACAC,WAAA;QACAC,qBAAA;UAAAC,GAAA;UAAAZ,IAAA;QAAA;QACAa,OAAA;QACAC,mBAAA;QACAC,YAAA;QACAC,oBAAA;QACAC,gBAAA;QACAC,aAAA;QACAC,eAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,eAAA;QACAC,wBAAA;MACA;MACAC,mBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAhB,SAAA,GAAAiB,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAC,QAAA;IACA,KAAAtB,eAAA,QAAAsB,QAAA,CAAAjB,GAAA;IACA,IAAAkB,iBAAA,QAAA1B,UAAA,CAAA2B,MAAA,IAAAC,MAAA,CAAAC,IAAA,CAAAD,MAAA,IAAAA,MAAA,CAAAE,KAAA;IACAJ,iBAAA,CAAAK,MAAA,QAAAC,sBAAA;EACA;EACAC,OAAA;IACAD,uBAAA;MACAxC,mBAAA,GAAA0C,IAAA,CAAAC,QAAA;QACA,IAAAC,aAAA,GAAAD,QAAA;QACAC,aAAA,CAAAC,OAAA,MAAAC,wBAAA;MACA;MACA,YAAAlB,mBAAA;IACA;IACAkB,yBAAAC,YAAA;MACA,KAAAnB,mBAAA,CAAAoB,IAAA;QACA,OAAAD,YAAA,CAAA/B,GAAA;QACA,QAAA+B,YAAA,CAAAhC;MACA;IACA;IACAkC,qBAAA;MACA,IAAAC,OAAA;QACApC,WAAA,OAAAD,SAAA,CAAAC,WAAA;QACAqC,cAAA,OAAAtC,SAAA,CAAAE,qBAAA,CAAAC,GAAA;QACAD,qBAAA,OAAAF,SAAA,CAAAE,qBAAA,CAAAX,IAAA;QACAa,OAAA,OAAAJ,SAAA,CAAAI,OAAA;QACAC,mBAAA,OAAAL,SAAA,CAAAK,mBAAA;QACAC,YAAA,OAAAN,SAAA,CAAAM,YAAA;QACAC,oBAAA,OAAAP,SAAA,CAAAO,oBAAA;QACAC,gBAAA,OAAAR,SAAA,CAAAQ,gBAAA;QACAC,aAAA,OAAAT,SAAA,CAAAS,aAAA;QACAC,eAAA,OAAAV,SAAA,CAAAU,eAAA;QACAC,iBAAA,OAAAX,SAAA,CAAAW,iBAAA;QACAE,eAAA,OAAAb,SAAA,CAAAa,eAAA;QACAC,wBAAA,OAAAd,SAAA,CAAAc,wBAAA;QACAF,gBAAA,OAAAZ,SAAA,CAAAY;MACA;MAEA,SAAA2B,UAAA;QACAF,OAAA,CAAAlC,GAAA,QAAAL,eAAA;QACAT,aAAA,MAAAS,eAAA,EAAAuC,OAAA,EAAAR,IAAA,CAAAC,QAAA;UACA,IAAAU,gBAAA,GAAAV,QAAA;UACA,KAAAW,KAAA,iBAAAD,gBAAA;QACA;MACA,gBAAAD,UAAA;QACAF,OAAA,CAAAK,YAAA,GAAAC,IAAA,CAAAC,GAAA;QACAxD,aAAA,CAAAiD,OAAA,EAAAR,IAAA,CAAAC,QAAA;UACA,IAAAe,cAAA,GAAAf,QAAA;UACA,KAAAW,KAAA,iBAAAI,cAAA;QACA;MACA;IACA;IACAC,kBAAA;MACA,KAAAL,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
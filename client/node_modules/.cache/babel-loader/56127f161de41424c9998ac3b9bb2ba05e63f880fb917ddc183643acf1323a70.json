{"ast":null,"code":"import { validationMixin } from 'vuelidate';\nimport { required, minLength, numeric } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nexport default {\n  name: 'CreateProductGroupModal',\n  mixins: [validationMixin],\n  data: function () {\n    return {\n      form: {\n        productGroup: null,\n        productSubGroup: null,\n        productSubGroupPrefix: null,\n        oneSideHamaliPerQuintal: null,\n        yearlyRentPerQuintal: null,\n        creationDate: null\n      },\n      footerBgVariant: \"light\"\n    };\n  },\n  validations: {\n    form: {\n      productGroup: {\n        required,\n        minLength: minLength(3)\n      },\n      productSubGroup: {\n        required,\n        minLength: minLength(3)\n      },\n      productSubGroupPrefix: {},\n      oneSideHamaliPerQuintal: {\n        numeric\n      },\n      yearlyRentPerQuintal: {\n        numeric\n      }\n    }\n  },\n  methods: {\n    productSubGroupPrefixFormatter() {\n      if (this.form.productGroup == null || this.form.productSubGroup == null) {\n        this.form.productSubGroupPrefix = null;\n      } else if (this.form.productGroup == this.form.productSubGroup) {\n        this.form.productSubGroupPrefix = this.form.productGroup;\n      } else {\n        this.form.productSubGroupPrefix = this.form.productGroup + \" (\" + this.form.productSubGroup + \")\";\n      }\n      return this.form.productSubGroupPrefix;\n    },\n    handleOk(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n    handleSubmit() {\n      // Exit when the form isn't valid\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        console.log(\"There are errors in the form\");\n        return;\n      }\n\n      // Add a new Product Group\n      this.createNewProductGroup();\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$bvModal.hide('createProductGroupModal');\n      });\n    },\n    createNewProductGroup() {\n      let apiURL = 'http://localhost:5200/referenceData/productGroups';\n      let newProductGroup = {\n        productGroup: this.form.productGroup,\n        productSubGroup: this.form.productSubGroup,\n        productSubGroupPrefix: this.form.productGroup === this.form.productSubGroup ? this.form.productGroup : this.form.productGroup + \" (\" + this.form.productSubGroup + \")\",\n        onesideHamaliPerQuintal: this.form.oneSideHamaliPerQuintal,\n        yearlyRentPerQuintal: this.form.yearlyRentPerQuintal,\n        creationDate: new Date()\n      };\n      axios.post(apiURL, newProductGroup).then(res => {\n        newProductGroup._id = res;\n\n        // show success notification\n        this.showSnotify(\"success\");\n\n        // reload table and update table header\n      }).catch(error => {\n        // show failure notification\n        this.showSnotify(\"error\");\n        console.log(error);\n      });\n    },\n    showSnotify(notificationType) {\n      if (notificationType = \"success\") {\n        // this.$snotify.success('Product Group created successfully!', {\n        //     timeout: 2000,\n        //     showProgressBar: false,\n        //     closeOnClick: false,\n        //     pauseOnHover: true,\n        // });\n      } else if (notificationType = \"error\") {\n        // this.$snotify.error('Product Group creation failed!', {\n        //     timeout: 2000,\n        //     showProgressBar: false,\n        //     closeOnClick: false,\n        //     pauseOnHover: true,\n        // });\n      }\n    }\n  }\n};","map":{"version":3,"names":["validationMixin","required","minLength","numeric","axios","name","mixins","data","form","productGroup","productSubGroup","productSubGroupPrefix","oneSideHamaliPerQuintal","yearlyRentPerQuintal","creationDate","footerBgVariant","validations","methods","productSubGroupPrefixFormatter","handleOk","bvModalEvent","preventDefault","handleSubmit","$v","$touch","$anyError","console","log","createNewProductGroup","$nextTick","$bvModal","hide","apiURL","newProductGroup","onesideHamaliPerQuintal","Date","post","then","res","_id","showSnotify","catch","error","notificationType"],"sources":["src/components/forms/CreateProductGroupModal.vue"],"sourcesContent":["<template>\n    <div>\n        <b-modal centered id=\"createProductGroupModal\" :footer-bg-variant=\"footerBgVariant\" title=\"Create new Product Group\"\n            size=\"md\" @ok=\"handleOk\">\n            <section class=\"validation\">\n                <div class=\"grid-margin stretch-card col-lg-12\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <b-form>\n                                <b-form-group id=\"product-group-group\" label=\"Product Group\" label-for=\"product-group\">\n                                    <b-form-input id=\"product-group\" name=\"product-group\"\n                                        v-model=\"$v.form.productGroup.$model\"\n                                        :state=\"$v.form.productGroup.$dirty ? !$v.form.productGroup.$error : null\"\n                                        aria-describedby=\"product-group-live-feedback\"\n                                        placeholder=\"Product Group Name\" deboune=\"500\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"product-group-live-feedback\">\n                                        This is a required field and must be at least 3 characters.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"product-sub-group-group\" label=\"Product Sub Group\" label-for=\"product-sub-group\">\n                                    <b-form-input id=\"product-sub-group\" name=\"product-sub-group\"\n                                        v-model=\"$v.form.productSubGroup.$model\"\n                                        :state=\"$v.form.productSubGroup.$dirty ? !$v.form.productSubGroup.$error : null\"\n                                        aria-describedby=\"product-sub-group-live-feedback\"\n                                        placeholder=\"Product Sub Group Name\" debounce=\"500\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"product-sub-group-live-feedback\">\n                                        This is a required field and must be at least 3 characters.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"one-side-hamali-per-quintal-group\" label=\"One side Hamali per Quintal\" label-for=\"one-side-hamali-per-quintal\">\n                                    <b-form-input id=\"one-side-hamali-per-quintal\" name=\"one-side-hamali-per-quintal\"\n                                        v-model=\"$v.form.oneSideHamaliPerQuintal.$model\"\n                                        :state=\"$v.form.oneSideHamaliPerQuintal.$dirty ? !$v.form.oneSideHamaliPerQuintal.$error : null\"\n                                        aria-describedby=\"one-side-hamali-per-quintal-live-feedback\"\n                                        placeholder=\"One side hamali charges per quintal\"></b-form-input>\n                                </b-form-group>\n\n\n                                <b-form-group id=\"yearly-rent-per-quintal-group\" label=\"Yearly Rent Per Qunital\" label-for=\"yearly-rent-per-quintal\">\n                                    <b-form-input id=\"yearly-rent-per-quintal\" name=\"yearly-rent-per-quintal\"\n                                        v-model=\"$v.form.yearlyRentPerQuintal.$model\"\n                                        :state=\"$v.form.yearlyRentPerQuintal.$dirty ? !$v.form.yearlyRentPerQuintal.$error : null\"\n                                        aria-describedby=\"yearly-rent-per-quintal-live-feedback\"\n                                        placeholder=\"Yearly rental rate per quintal\"></b-form-input>\n                                </b-form-group>\n                            </b-form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </b-modal>\n    </div>\n</template>\n  \n<script scoped lang=\"js\">\nimport { validationMixin } from 'vuelidate';\nimport { required, minLength, numeric } from 'vuelidate/lib/validators';\nimport axios from 'axios';\n\nexport default {\n    name: 'CreateProductGroupModal',\n    mixins: [validationMixin],\n    data: function () {\n        return {\n            form: {\n                productGroup: null,\n                productSubGroup: null,\n                productSubGroupPrefix: null,\n                oneSideHamaliPerQuintal: null,\n                yearlyRentPerQuintal: null,\n                creationDate: null\n            },\n            footerBgVariant: \"light\",\n        }\n    },\n    validations: {\n        form: {\n            productGroup: {\n                required,\n                minLength: minLength(3)\n            },\n            productSubGroup: {\n                required,\n                minLength: minLength(3)\n            },\n            productSubGroupPrefix: {\n            },\n            oneSideHamaliPerQuintal: {\n                numeric\n            },\n            yearlyRentPerQuintal: {\n                numeric\n            }\n        }\n    },\n    methods: {\n        productSubGroupPrefixFormatter() {\n            if(this.form.productGroup == null || this.form.productSubGroup == null) {\n                this.form.productSubGroupPrefix = null;\n            } else if(this.form.productGroup == this.form.productSubGroup) {\n                this.form.productSubGroupPrefix = this.form.productGroup;\n            } else {\n                this.form.productSubGroupPrefix = this.form.productGroup + \" (\" + this.form.productSubGroup + \")\"; \n            }\n            return this.form.productSubGroupPrefix;\n        },\n        handleOk(bvModalEvent) {\n            // Prevent modal from closing\n            bvModalEvent.preventDefault()\n            // Trigger submit handler\n            this.handleSubmit()\n        },\n        handleSubmit() {\n            // Exit when the form isn't valid\n            this.$v.form.$touch()\n            if (this.$v.form.$anyError) {\n                console.log(\"There are errors in the form\");\n                return\n            }\n\n            // Add a new Product Group\n            this.createNewProductGroup();\n\n            // Hide the modal manually\n            this.$nextTick(() => {\n                this.$bvModal.hide('createProductGroupModal')\n            })\n        },\n        createNewProductGroup() {\n            let apiURL = 'http://localhost:5200/referenceData/productGroups';\n            let newProductGroup = {\n                productGroup: this.form.productGroup,\n                productSubGroup: this.form.productSubGroup,\n                productSubGroupPrefix: (this.form.productGroup === this.form.productSubGroup ? \n                    this.form.productGroup : (this.form.productGroup + \" (\" + this.form.productSubGroup + \")\" )),\n                onesideHamaliPerQuintal: this.form.oneSideHamaliPerQuintal,\n                yearlyRentPerQuintal: this.form.yearlyRentPerQuintal,\n                creationDate: new Date()\n            };\n            axios.post(apiURL, newProductGroup).then((res) => {\n                newProductGroup._id = res;\n\n                // show success notification\n                this.showSnotify(\"success\");\n\n                // reload table and update table header\n            }).catch(error => {\n                // show failure notification\n                this.showSnotify(\"error\");\n                console.log(error);\n            });\n        },\n        showSnotify(notificationType) {\n            if (notificationType = \"success\") {\n                // this.$snotify.success('Product Group created successfully!', {\n                //     timeout: 2000,\n                //     showProgressBar: false,\n                //     closeOnClick: false,\n                //     pauseOnHover: true,\n                // });\n            } else if (notificationType = \"error\") {\n                // this.$snotify.error('Product Group creation failed!', {\n                //     timeout: 2000,\n                //     showProgressBar: false,\n                //     closeOnClick: false,\n                //     pauseOnHover: true,\n                // });\n            }\n        }\n    }\n}\n</script>"],"mappings":"AA2DA,SAAAA,eAAA;AACA,SAAAC,QAAA,EAAAC,SAAA,EAAAC,OAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAN,eAAA;EACAO,IAAA,WAAAA,CAAA;IACA;MACAC,IAAA;QACAC,YAAA;QACAC,eAAA;QACAC,qBAAA;QACAC,uBAAA;QACAC,oBAAA;QACAC,YAAA;MACA;MACAC,eAAA;IACA;EACA;EACAC,WAAA;IACAR,IAAA;MACAC,YAAA;QACAR,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAQ,eAAA;QACAT,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAS,qBAAA,GACA;MACAC,uBAAA;QACAT;MACA;MACAU,oBAAA;QACAV;MACA;IACA;EACA;EACAc,OAAA;IACAC,+BAAA;MACA,SAAAV,IAAA,CAAAC,YAAA,iBAAAD,IAAA,CAAAE,eAAA;QACA,KAAAF,IAAA,CAAAG,qBAAA;MACA,gBAAAH,IAAA,CAAAC,YAAA,SAAAD,IAAA,CAAAE,eAAA;QACA,KAAAF,IAAA,CAAAG,qBAAA,QAAAH,IAAA,CAAAC,YAAA;MACA;QACA,KAAAD,IAAA,CAAAG,qBAAA,QAAAH,IAAA,CAAAC,YAAA,eAAAD,IAAA,CAAAE,eAAA;MACA;MACA,YAAAF,IAAA,CAAAG,qBAAA;IACA;IACAQ,SAAAC,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAC,YAAA;IACA;IACAA,aAAA;MACA;MACA,KAAAC,EAAA,CAAAf,IAAA,CAAAgB,MAAA;MACA,SAAAD,EAAA,CAAAf,IAAA,CAAAiB,SAAA;QACAC,OAAA,CAAAC,GAAA;QACA;MACA;;MAEA;MACA,KAAAC,qBAAA;;MAEA;MACA,KAAAC,SAAA;QACA,KAAAC,QAAA,CAAAC,IAAA;MACA;IACA;IACAH,sBAAA;MACA,IAAAI,MAAA;MACA,IAAAC,eAAA;QACAxB,YAAA,OAAAD,IAAA,CAAAC,YAAA;QACAC,eAAA,OAAAF,IAAA,CAAAE,eAAA;QACAC,qBAAA,OAAAH,IAAA,CAAAC,YAAA,UAAAD,IAAA,CAAAE,eAAA,GACA,KAAAF,IAAA,CAAAC,YAAA,QAAAD,IAAA,CAAAC,YAAA,eAAAD,IAAA,CAAAE,eAAA;QACAwB,uBAAA,OAAA1B,IAAA,CAAAI,uBAAA;QACAC,oBAAA,OAAAL,IAAA,CAAAK,oBAAA;QACAC,YAAA,MAAAqB,IAAA;MACA;MACA/B,KAAA,CAAAgC,IAAA,CAAAJ,MAAA,EAAAC,eAAA,EAAAI,IAAA,CAAAC,GAAA;QACAL,eAAA,CAAAM,GAAA,GAAAD,GAAA;;QAEA;QACA,KAAAE,WAAA;;QAEA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACA;QACA,KAAAF,WAAA;QACAd,OAAA,CAAAC,GAAA,CAAAe,KAAA;MACA;IACA;IACAF,YAAAG,gBAAA;MACA,IAAAA,gBAAA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA,UAAAA,gBAAA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
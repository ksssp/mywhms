{"ast":null,"code":"import Vue from \"vue\";\nimport SortedTablePlugin from \"vue-sorted-table\";\nimport axios from \"axios\";\nimport JsonCSV from \"vue-json-csv\";\nimport CreateProductModal from \"@/components/forms/CreateProductModal.vue\";\nimport ImportProductsModal from \"@/components/forms/ImportProductsModal.vue\";\nVue.component(\"downloadCsv\", JsonCSV);\nVue.use(SortedTablePlugin, {\n  ascIcon: '<i class=\"mdi mdi-arrow-down\"></i>',\n  descIcon: '<i class=\"mdi mdi-arrow-up\"></i>'\n});\nexport default {\n  name: \"ProductsMasterList\",\n  components: {\n    CreateProductModal,\n    ImportProductsModal\n  },\n  data: function () {\n    return {\n      perPage: 10,\n      totalRows: 1,\n      currentPage: 1,\n      pageOptions: [5, 10, 25, 50],\n      sortBy: \"productName\",\n      sortDesc: false,\n      sortByFormatted: true,\n      filter: null,\n      filterByFormatted: true,\n      sortable: true,\n      footerBgVariant: \"light\",\n      downloadFileName: \"productsMasterList.csv\",\n      newProductGroup: {\n        _id: \"\",\n        productName: \"\",\n        productSubGroupPrefix: \"\",\n        computedProductName: \"\",\n        hamaliPerBag: \"\",\n        platformCooliePerBag: \"\",\n        kataCooliePerBag: \"\",\n        mamulluPerBag: \"\",\n        monthlyRentPerBag: \"\",\n        yearlyRentPerBag: \"\",\n        insurancePerBag: \"\",\n        yearlyRentPerKg: \"\",\n        bagSize: \"\",\n        computedYearlyRentPerBag: \"\",\n        creationDate: \"\"\n      },\n      fields: [{\n        key: \"productName\",\n        sortable: true\n      }, {\n        key: \"productSubGroupPrefix\",\n        sortable: true\n      }, {\n        key: \"computedProductName\",\n        sortable: true\n      }, {\n        key: \"hamaliPerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"platformCooliePerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"kataCooliePerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"mamulluPerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"monthlyRentPerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"yearlyRentPerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"insurancePerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"yearlyRentPerKg\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"bagSize\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"computedYearlyRentPerBag\",\n        sortable: true,\n        class: 'text-center'\n      }, {\n        key: \"creationDate\",\n        sortable: true\n      }, {\n        key: \"actions\"\n      }],\n      items: []\n    };\n  },\n  created() {\n    let apiURL = \"/api/referenceData/products\";\n    console.log(\"loading Products List - \", apiURL);\n    axios.get(apiURL).then(res => {\n      this.items = res.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  computed: {\n    rows() {\n      // this.totalRows = this.items.length\n      return this.items.length;\n    }\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  methods: {\n    edit(item, index, button) {\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    delete(item, index, button) {\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  }\n};","map":{"version":3,"names":["Vue","SortedTablePlugin","axios","JsonCSV","CreateProductModal","ImportProductsModal","component","use","ascIcon","descIcon","name","components","data","perPage","totalRows","currentPage","pageOptions","sortBy","sortDesc","sortByFormatted","filter","filterByFormatted","sortable","footerBgVariant","downloadFileName","newProductGroup","_id","productName","productSubGroupPrefix","computedProductName","hamaliPerBag","platformCooliePerBag","kataCooliePerBag","mamulluPerBag","monthlyRentPerBag","yearlyRentPerBag","insurancePerBag","yearlyRentPerKg","bagSize","computedYearlyRentPerBag","creationDate","fields","key","class","items","created","apiURL","console","log","get","then","res","catch","error","computed","rows","length","mounted","methods","edit","item","index","button","delete","onFiltered","filteredItems"],"sources":["src/pages/referenceData/ProductsMasterList.vue"],"sourcesContent":["<template>\n    <div class=\"tables\">\n        <div class=\"page-header\">\n            <h3 class=\"page-title\">\n                Products\n            </h3>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a href=\"javascript:void(0);\">Reference Data</a></li>\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Products</li>\n                </ol>\n            </nav>\n        </div>\n        <div class=\"row col-lg-12 grid-margin stretch-card\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"row template-demo\">\n                        <div class=\"col-md-6\">\n                            <h4 class=\"card-title\">Products ( {{ rows }} )</h4>\n                            <!-- <download-csv\n\t                            class=\"btn btn-default\" :data=\"items\" :fields=\"fields\" :name=\"downloadFileName\" >\n                                Download Data\n                                <i class=\"mdi mdi-download btn-icon-prepend\"></i>\n                            </download-csv> -->\n                        </div>\n                        <div class=\"col-md-6\" align=\"right\">\n                            <button v-b-modal.createProductModal type=\"button\"\n                                class=\"btn btn-gradient-primary btn-icon-text\">\n                                <i class=\"mdi mdi-account-plus btn-icon-prepend\"></i>\n                                Create\n                            </button>\n                            <CreateProductModal></CreateProductModal>\n                        </div>\n                    </div>\n\n                    <br />\n                    <div class=\"row\">\n                        <div class=\"col-md-6\" align=\"left\">\n                            <div class=\"row\">\n                                <div class=\"col-md-3\">\n                                    <b-form-group label=\"Per page\" label-for=\"per-page-select\" aria-controls=\"table-list\">\n                                        <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\">\n                                        </b-form-select>\n                                    </b-form-group>\n                                </div>\n                                <div class=\"col-md-9\">\n                                    <b-form-group label=\"Search\" label-for=\"filter-input\" aria-controls=\"table-list\">Â \n                                        <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\n                                                placeholder=\"Type to Search\"></b-form-input>\n                                    </b-form-group>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\" align=\"right\">\n                            <button v-b-modal.importProductsModal type=\"button\"\n                                class=\"btn btn-gradient-success btn-icon-text\">\n                                <i class=\"mdi mdi-upload btn-icon-prepend\"></i>\n                                Upload\n                            </button>\n                            <button type=\"button\" class=\"btn btn-gradient-success btn-icon-text\">\n                                <i class=\"mdi mdi-download btn-icon-prepend\"></i>\n                                Download\n                            </button>\n\n                            <ImportProductsModal></ImportProductsModal>\n                        </div>\n                    </div>\n                    <b-table hover :items=\"items\" id=\"table-list\" responsive :per-page=\"perPage\" :current-page=\"currentPage\" show-empty\n                        :fields=\"fields\" :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :filter=\"filter\"  @filtered=\"onFiltered\">\n\n                        <template #cell(actions)=\"row\">\n                            <b-button size=\"sm\" @click=\"edit(row.item, row.index, $event.target)\" class=\"mr-1\">\n                                Edit\n                            </b-button>\n                            <b-button size=\"sm\" @click=\"delete(row.item, row.index, $event.target)\" class=\"mr-1\">\n                                Delete\n                            </b-button>\n                        </template>\n\n                    </b-table>\n                    <b-pagination v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" aria-controls=\"table-list\"\n                        align=\"right\">\n                    </b-pagination>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport SortedTablePlugin from \"vue-sorted-table\";\nimport axios from \"axios\";\nimport JsonCSV from \"vue-json-csv\";\n\nimport CreateProductModal from \"@/components/forms/CreateProductModal.vue\";\nimport ImportProductsModal from \"@/components/forms/ImportProductsModal.vue\";\n\nVue.component(\"downloadCsv\", JsonCSV);\n\nVue.use(SortedTablePlugin, {\n    ascIcon: '<i class=\"mdi mdi-arrow-down\"></i>',\n    descIcon: '<i class=\"mdi mdi-arrow-up\"></i>'\n});\n\nexport default {\n    name: \"ProductsMasterList\",\n    components: {\n        CreateProductModal,\n        ImportProductsModal\n    },\n    data: function () {\n        return {\n            perPage: 10,\n            totalRows: 1,\n            currentPage: 1,\n            pageOptions: [5, 10, 25, 50],\n            sortBy: \"productName\",\n            sortDesc: false,\n            sortByFormatted: true,\n            filter: null,\n            filterByFormatted: true,\n            sortable: true,\n            footerBgVariant: \"light\",\n            downloadFileName: \"productsMasterList.csv\",\n            newProductGroup: {\n                _id: \"\",\n                productName: \"\",\n                productSubGroupPrefix: \"\",\n                computedProductName: \"\",\n                hamaliPerBag: \"\",\n                platformCooliePerBag: \"\",\n                kataCooliePerBag: \"\",\n                mamulluPerBag: \"\",\n                monthlyRentPerBag: \"\",\n                yearlyRentPerBag: \"\",\n                insurancePerBag: \"\",\n                yearlyRentPerKg: \"\",\n                bagSize: \"\",\n                computedYearlyRentPerBag: \"\",\n                creationDate: \"\"\n            },\n            fields: [\n                { key: \"productName\", sortable: true },\n                { key: \"productSubGroupPrefix\", sortable: true },\n                { key: \"computedProductName\", sortable: true },\n                { key: \"hamaliPerBag\", sortable: true, class: 'text-center' },\n                { key: \"platformCooliePerBag\", sortable: true, class: 'text-center' },\n                { key: \"kataCooliePerBag\", sortable: true, class: 'text-center' },\n                { key: \"mamulluPerBag\", sortable: true, class: 'text-center' },\n                { key: \"monthlyRentPerBag\", sortable: true, class: 'text-center' },\n                { key: \"yearlyRentPerBag\", sortable: true, class: 'text-center' },\n                { key: \"insurancePerBag\", sortable: true, class: 'text-center' },\n                { key: \"yearlyRentPerKg\", sortable: true, class: 'text-center' },\n                { key: \"bagSize\", sortable: true, class: 'text-center' },\n                { key: \"computedYearlyRentPerBag\", sortable: true, class: 'text-center' },\n                { key: \"creationDate\", sortable: true},\n                { key: \"actions\" }\n            ],\n            items: []\n        };\n    },\n    created() {\n        let apiURL = \"/api/referenceData/products\";\n        console.log(\"loading Products List - \", apiURL)\n        axios.get(apiURL).then(res => {\n            this.items = res.data;\n        }).catch(error => {\n            console.log(error);\n        });\n    },\n    computed: {\n        rows() {\n            // this.totalRows = this.items.length\n            return this.items.length;\n        }\n    },\n    mounted() {\n        // Set the initial number of items\n        this.totalRows = this.items.length\n    },\n    methods: {\n        edit(item, index, button) {\n            // this.infoModal.title = `Row index: ${index}`\n            // this.infoModal.content = JSON.stringify(item, null, 2)\n            // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n        },\n        delete(item, index, button) {\n            // this.infoModal.title = `Row index: ${index}`\n            // this.infoModal.content = JSON.stringify(item, null, 2)\n            // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n        },\n        onFiltered(filteredItems) {\n            // Trigger pagination to update the number of buttons/pages due to filtering\n            this.totalRows = filteredItems.length\n            this.currentPage = 1\n        }\n    }\n}\n</script>"],"mappings":"AA0FA,OAAAA,GAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,KAAA;AACA,OAAAC,OAAA;AAEA,OAAAC,kBAAA;AACA,OAAAC,mBAAA;AAEAL,GAAA,CAAAM,SAAA,gBAAAH,OAAA;AAEAH,GAAA,CAAAO,GAAA,CAAAN,iBAAA;EACAO,OAAA;EACAC,QAAA;AACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAP,kBAAA;IACAC;EACA;EACAO,IAAA,WAAAA,CAAA;IACA;MACAC,OAAA;MACAC,SAAA;MACAC,WAAA;MACAC,WAAA;MACAC,MAAA;MACAC,QAAA;MACAC,eAAA;MACAC,MAAA;MACAC,iBAAA;MACAC,QAAA;MACAC,eAAA;MACAC,gBAAA;MACAC,eAAA;QACAC,GAAA;QACAC,WAAA;QACAC,qBAAA;QACAC,mBAAA;QACAC,YAAA;QACAC,oBAAA;QACAC,gBAAA;QACAC,aAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,eAAA;QACAC,eAAA;QACAC,OAAA;QACAC,wBAAA;QACAC,YAAA;MACA;MACAC,MAAA,GACA;QAAAC,GAAA;QAAApB,QAAA;MAAA,GACA;QAAAoB,GAAA;QAAApB,QAAA;MAAA,GACA;QAAAoB,GAAA;QAAApB,QAAA;MAAA,GACA;QAAAoB,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;QAAAqB,KAAA;MAAA,GACA;QAAAD,GAAA;QAAApB,QAAA;MAAA,GACA;QAAAoB,GAAA;MAAA,EACA;MACAE,KAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,MAAA;IACAC,OAAA,CAAAC,GAAA,6BAAAF,MAAA;IACA5C,KAAA,CAAA+C,GAAA,CAAAH,MAAA,EAAAI,IAAA,CAAAC,GAAA;MACA,KAAAP,KAAA,GAAAO,GAAA,CAAAvC,IAAA;IACA,GAAAwC,KAAA,CAAAC,KAAA;MACAN,OAAA,CAAAC,GAAA,CAAAK,KAAA;IACA;EACA;EACAC,QAAA;IACAC,KAAA;MACA;MACA,YAAAX,KAAA,CAAAY,MAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAA3C,SAAA,QAAA8B,KAAA,CAAAY,MAAA;EACA;EACAE,OAAA;IACAC,KAAAC,IAAA,EAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;IAAA,CACA;IACAC,OAAAH,IAAA,EAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;IAAA,CACA;IACAE,WAAAC,aAAA;MACA;MACA,KAAAnD,SAAA,GAAAmD,aAAA,CAAAT,MAAA;MACA,KAAAzC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
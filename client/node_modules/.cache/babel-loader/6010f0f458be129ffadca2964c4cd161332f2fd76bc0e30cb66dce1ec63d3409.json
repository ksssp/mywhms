{"ast":null,"code":"import { validationMixin } from 'vuelidate';\nimport { required, between, numeric } from 'vuelidate/lib/validators';\nimport { createNewDelivery } from '@/services/DeliveryService';\nimport { GoodWizard } from 'vue-good-wizard';\nexport default {\n  name: 'CreateDeliveryModal',\n  mixins: [validationMixin],\n  components: {\n    'vue-good-wizard': GoodWizard\n  },\n  data() {\n    return {\n      numBagsBalanceForLot: 0,\n      footerBgVariant: \"light\",\n      trademarkOptions: [],\n      lotNumberOptions: [],\n      steps: [{\n        label: 'Delivery Details',\n        slot: 'page1'\n      }, {\n        label: 'Charges',\n        slot: 'page2'\n      }, {\n        label: 'Finish',\n        slot: 'page3',\n        options: {\n          nextDisabled: true\n        }\n      }],\n      form: {\n        trademarkId: null,\n        numBagsDelivered: null,\n        numBagsBalance: null,\n        transportChargesPaid: null,\n        totalChargesReceived: null,\n        creationDate: null\n      }\n    };\n  },\n  validations: {\n    form: {\n      trademarkId: {\n        required\n      },\n      lotId: {\n        required\n      },\n      numBagsDelivered: {\n        required,\n        numeric,\n        between: between(0, this.numBagsBalanceForLot)\n      },\n      transportChargesPaid: {\n        numeric,\n        minValue: 0\n      },\n      totalChargesReceivable: {\n        numeric,\n        minValue: 0\n      },\n      totalChargesReceived: {\n        numeric,\n        minimum: 0\n      }\n    }\n  },\n  methods: {\n    nextClicked() {\n      return true;\n    },\n    backClicked() {\n      return true;\n    },\n    productSubGroupPrefixFormatter() {\n      if (this.form.productGroup == null || this.form.productSubGroup == null) {\n        this.form.productSubGroupPrefix = null;\n      } else if (this.form.productGroup == this.form.productSubGroup) {\n        this.form.productSubGroupPrefix = this.form.productGroup;\n      } else {\n        this.form.productSubGroupPrefix = this.form.productGroup + \" (\" + this.form.productSubGroup + \")\";\n      }\n      return this.form.productSubGroupPrefix;\n    },\n    handleOk(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n    handleSubmit() {\n      // Exit when the form isn't valid\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        console.log(\"There are errors in the form\");\n        return;\n      }\n\n      // Add a new Product Group\n      this.createNewProductGroup();\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$bvModal.hide('createProductGroupModal');\n      });\n    },\n    createNewDelivery() {\n      let newDelivery = {\n        productGroup: this.form.productGroup,\n        productSubGroup: this.form.productSubGroup,\n        productSubGroupPrefix: this.form.productGroup === this.form.productSubGroup ? this.form.productGroup : this.form.productGroup + \" (\" + this.form.productSubGroup + \")\",\n        oneSideHamaliPerQuintal: this.form.oneSideHamaliPerQuintal,\n        yearlyRentPerQuintal: this.form.yearlyRentPerQuintal,\n        creationDate: new Date()\n      };\n      createNewDelivery(newDelivery);\n    },\n    showSnotify(notificationType) {\n      if (notificationType = \"success\") {\n        // this.$snotify.success('Product Group created successfully!', {\n        //     timeout: 2000,\n        //     showProgressBar: false,\n        //     closeOnClick: false,\n        //     pauseOnHover: true,\n        // });\n      } else if (notificationType = \"error\") {\n        // this.$snotify.error('Product Group creation failed!', {\n        //     timeout: 2000,\n        //     showProgressBar: false,\n        //     closeOnClick: false,\n        //     pauseOnHover: true,\n        // });\n      }\n    }\n  }\n};","map":{"version":3,"names":["validationMixin","required","between","numeric","createNewDelivery","GoodWizard","name","mixins","components","data","numBagsBalanceForLot","footerBgVariant","trademarkOptions","lotNumberOptions","steps","label","slot","options","nextDisabled","form","trademarkId","numBagsDelivered","numBagsBalance","transportChargesPaid","totalChargesReceived","creationDate","validations","lotId","minValue","totalChargesReceivable","minimum","methods","nextClicked","backClicked","productSubGroupPrefixFormatter","productGroup","productSubGroup","productSubGroupPrefix","handleOk","bvModalEvent","preventDefault","handleSubmit","$v","$touch","$anyError","console","log","createNewProductGroup","$nextTick","$bvModal","hide","newDelivery","oneSideHamaliPerQuintal","yearlyRentPerQuintal","Date","showSnotify","notificationType"],"sources":["src/components/forms/CreateDeliveryModal.vue"],"sourcesContent":["<template>\n    <div>\n        <b-modal centered id=\"createDeliveryModal\" :footer-bg-variant=\"footerBgVariant\" title=\"Create new Delivery\"\n            size=\"lg\" @ok=\"handleOk\">\n            <div class=\"grid-margin stretch-card col-lg-12\">\n                <div class=\"card\">\n                    <div class=\"card-body custom-wizard\">\n                        <vue-good-wizard :steps=\"steps\" :onNext=\"nextClicked\" :onBack=\"backClicked\">\n                            <section class=\"validation\">\n                                <div slot=\"page1\">\n                                    <section>\n                                        <h3>Lot</h3>\n                                        <!-- <b-form-group horizontal id=\"trademark-group\" label=\"Trademark\"\n                                            label-for=\"trademark\">\n                                            <b-form-select :options=\"trademarkOptions\" name=\"trademark\"\n                                                v-model=\"$v.form.trademark.$model\"\n                                                :state=\"$v.form.trademark.$dirty ? !$v.form.trademark.$error : null\"\n                                                aria-describedby=\"trademark-live-feedback\"\n                                                placeholder=\"Select Trademark\">\n                                            </b-form-select>\n                                            <b-form-invalid-feedback id=\"trademark-live-feedback\">\n                                                This is a required field.\n                                            </b-form-invalid-feedback>\n                                        </b-form-group>\n\n                                        <b-form-group horizontal id=\"lot-number-group\" label=\"Lot Number\"\n                                            label-for=\"lot-number\">\n                                            <b-form-select :options=\"lotNumberOptions\" name=\"lot-number\"\n                                                v-model=\"$v.form.lotNumber.$model\"\n                                                :state=\"$v.form.lotNumber.$dirty ? !$v.form.lotNumber.$error : null\"\n                                                aria-describedby=\"lot-number-live-feedback\"\n                                                placeholder=\"Select Lot Number\">\n                                            </b-form-select>\n                                            <b-form-invalid-feedback id=\"lot-number-live-feedback\">\n                                                This is a required field.\n                                            </b-form-invalid-feedback>\n                                        </b-form-group>\n\n                                        <b-form-group id=\"num-bags-lodged-group\" label=\"Lodged Bags\" label-for=\"num-bags-lodged\">\n                                            <b-form-input id=\"num-bags-lodged\" name=\"num-bags-lodged\"\n                                                v-model=\"$v.form.numBagsLodged.$model\"\n                                                :state=\"$v.form.numBagsLodged.$dirty ? !$v.form.numBagsLodged.$error : null\"\n                                                aria-describedby=\"num-bags-lodged-live-feedback\"\n                                                placeholder=\"0\" aria-disabled=\"true\"></b-form-input>\n                                            <b-form-invalid-feedback id=\"num-bags-lodged-live-feedback\">\n                                                This is a required field and must be at least 3 characters.\n                                            </b-form-invalid-feedback>\n                                        </b-form-group>\n\n                                        <b-form-group id=\"num-bags-balance-group\" label=\"Num Bags Balance\" label-for=\"num-bags-balance\">\n                                            <b-form-input id=\"num-bags-balance\" name=\"num-bags-balance\"\n                                                v-model=\"$v.form.numBagsBalance.$model\"\n                                                :state=\"$v.form.numBagsBalance.$dirty ? !$v.form.numBagsBalance.$error : null\"\n                                                aria-describedby=\"num-bags-balance-live-feedback\"\n                                                placeholder=\"0\" aria-disabled=\"true\"></b-form-input>\n                                            <b-form-invalid-feedback id=\"num-bags-balance-live-feedback\">\n                                                This is a required field and must be at least 3 characters.\n                                            </b-form-invalid-feedback>\n                                        </b-form-group>\n\n                                        <b-form-group id=\"num-bags-delivered-group\" label=\"Delivered Bags\" label-for=\"num-bags-delivered\">\n                                            <b-form-input id=\"num-bags-delivered\" name=\"num-bags-delivered\"\n                                                v-model=\"$v.form.numBagsDelivered.$model\"\n                                                :state=\"$v.form.numBagsDelivered.$dirty ? !$v.form.numBagsDelivered.$error : null\"\n                                                aria-describedby=\"num-bags-delivered-live-feedback\"\n                                                placeholder=\"0\"></b-form-input>\n                                            <b-form-invalid-feedback id=\"num-bags-delivered-live-feedback\">\n                                                This is a required field and must be at least 3 characters.\n                                            </b-form-invalid-feedback>\n                                        </b-form-group>\n                                    -->\n                                        <div class=\"form-group\">\n                                            <label>Email address</label>\n                                            <input type=\"email\" class=\"form-control\" aria-describedby=\"emailHelp\"\n                                                placeholder=\"Enter email\">\n                                            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email\n                                                with anyone else.</small>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label>Password</label>\n                                            <input type=\"password\" class=\"form-control\" placeholder=\"Password\">\n                                        </div>\n                                    </section>\n                                </div>\n                                <div slot=\"page2\">\n                                    <section>\n                                        <h3>Charges</h3>\n                                        <div class=\"form-group\">\n                                            <label>Hamali Charges Paid</label>\n                                            <input type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\"\n                                                placeholder=\"Enter first name\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label>Transport Charges Paid</label>\n                                            <input type=\"text\" class=\"form-control\" placeholder=\"0\">\n                                        </div>\n                                    </section>\n                                </div>\n                                <div slot=\"page3\">\n                                    <section>\n                                        <h3>Notes</h3>\n                                        <div class=\"form-group\">\n                                            <label>Delivery Notes</label>\n                                            <textarea class=\"form-control\" rows=\"3\"></textarea>\n                                        </div>\n                                    </section>\n                                </div>\n                            </section>\n                        </vue-good-wizard>\n                    </div>\n                </div>\n            </div>\n        </b-modal>\n    </div>\n</template>\n  \n<script scoped lang=\"js\">\nimport { validationMixin } from 'vuelidate';\nimport { required, between, numeric } from 'vuelidate/lib/validators';\nimport { createNewDelivery } from '@/services/DeliveryService';\nimport { GoodWizard } from 'vue-good-wizard';\n\nexport default {\n    name: 'CreateDeliveryModal',\n    mixins: [validationMixin],\n    components: {\n        'vue-good-wizard': GoodWizard\n    },\n    data() {\n        return {\n            numBagsBalanceForLot: 0,\n            footerBgVariant: \"light\",\n            trademarkOptions: [],\n            lotNumberOptions: [],\n            steps: [\n                {\n                    label: 'Delivery Details',\n                    slot: 'page1'\n                },\n                {\n                    label: 'Charges',\n                    slot: 'page2'\n                },\n                {\n                    label: 'Finish',\n                    slot: 'page3',\n                    options: {\n                        nextDisabled: true\n                    }\n                }\n            ],\n            form: {\n                trademarkId: null,\n                numBagsDelivered: null,\n                numBagsBalance: null,\n                transportChargesPaid: null,\n                totalChargesReceived: null,\n                creationDate: null\n            }\n        }\n    },\n    validations: {\n        form: {\n            trademarkId: {\n                required,\n            },\n            lotId: {\n                required\n            },\n            numBagsDelivered: {\n                required,\n                numeric,\n                between: between(0, this.numBagsBalanceForLot)\n            },\n            transportChargesPaid: {\n                numeric,\n                minValue: 0\n            },\n            totalChargesReceivable: {\n                numeric,\n                minValue: 0\n            },\n            totalChargesReceived: {\n                numeric,\n                minimum: 0\n            }\n        }\n    },\n    methods: {\n        nextClicked() {\n            return true\n        },\n        backClicked() {\n            return true\n        },\n        productSubGroupPrefixFormatter() {\n            if (this.form.productGroup == null || this.form.productSubGroup == null) {\n                this.form.productSubGroupPrefix = null;\n            } else if (this.form.productGroup == this.form.productSubGroup) {\n                this.form.productSubGroupPrefix = this.form.productGroup;\n            } else {\n                this.form.productSubGroupPrefix = this.form.productGroup + \" (\" + this.form.productSubGroup + \")\";\n            }\n            return this.form.productSubGroupPrefix;\n        },\n        handleOk(bvModalEvent) {\n            // Prevent modal from closing\n            bvModalEvent.preventDefault()\n            // Trigger submit handler\n            this.handleSubmit()\n        },\n        handleSubmit() {\n            // Exit when the form isn't valid\n            this.$v.form.$touch()\n            if (this.$v.form.$anyError) {\n                console.log(\"There are errors in the form\");\n                return\n            }\n\n            // Add a new Product Group\n            this.createNewProductGroup();\n\n            // Hide the modal manually\n            this.$nextTick(() => {\n                this.$bvModal.hide('createProductGroupModal')\n            })\n        },\n        createNewDelivery() {\n            let newDelivery = {\n                productGroup: this.form.productGroup,\n                productSubGroup: this.form.productSubGroup,\n                productSubGroupPrefix: (this.form.productGroup === this.form.productSubGroup ?\n                    this.form.productGroup : (this.form.productGroup + \" (\" + this.form.productSubGroup + \")\")),\n                oneSideHamaliPerQuintal: this.form.oneSideHamaliPerQuintal,\n                yearlyRentPerQuintal: this.form.yearlyRentPerQuintal,\n                creationDate: new Date()\n            };\n            createNewDelivery(newDelivery);\n        },\n        showSnotify(notificationType) {\n            if (notificationType = \"success\") {\n                // this.$snotify.success('Product Group created successfully!', {\n                //     timeout: 2000,\n                //     showProgressBar: false,\n                //     closeOnClick: false,\n                //     pauseOnHover: true,\n                // });\n            } else if (notificationType = \"error\") {\n                // this.$snotify.error('Product Group creation failed!', {\n                //     timeout: 2000,\n                //     showProgressBar: false,\n                //     closeOnClick: false,\n                //     pauseOnHover: true,\n                // });\n            }\n        }\n    }\n}\n</script>"],"mappings":"AAqHA,SAAAA,eAAA;AACA,SAAAC,QAAA,EAAAC,OAAA,EAAAC,OAAA;AACA,SAAAC,iBAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAP,eAAA;EACAQ,UAAA;IACA,mBAAAH;EACA;EACAI,KAAA;IACA;MACAC,oBAAA;MACAC,eAAA;MACAC,gBAAA;MACAC,gBAAA;MACAC,KAAA,GACA;QACAC,KAAA;QACAC,IAAA;MACA,GACA;QACAD,KAAA;QACAC,IAAA;MACA,GACA;QACAD,KAAA;QACAC,IAAA;QACAC,OAAA;UACAC,YAAA;QACA;MACA,EACA;MACAC,IAAA;QACAC,WAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,oBAAA;QACAC,oBAAA;QACAC,YAAA;MACA;IACA;EACA;EACAC,WAAA;IACAP,IAAA;MACAC,WAAA;QACAnB;MACA;MACA0B,KAAA;QACA1B;MACA;MACAoB,gBAAA;QACApB,QAAA;QACAE,OAAA;QACAD,OAAA,EAAAA,OAAA,SAAAQ,oBAAA;MACA;MACAa,oBAAA;QACApB,OAAA;QACAyB,QAAA;MACA;MACAC,sBAAA;QACA1B,OAAA;QACAyB,QAAA;MACA;MACAJ,oBAAA;QACArB,OAAA;QACA2B,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA;IACA;IACAC,YAAA;MACA;IACA;IACAC,+BAAA;MACA,SAAAf,IAAA,CAAAgB,YAAA,iBAAAhB,IAAA,CAAAiB,eAAA;QACA,KAAAjB,IAAA,CAAAkB,qBAAA;MACA,gBAAAlB,IAAA,CAAAgB,YAAA,SAAAhB,IAAA,CAAAiB,eAAA;QACA,KAAAjB,IAAA,CAAAkB,qBAAA,QAAAlB,IAAA,CAAAgB,YAAA;MACA;QACA,KAAAhB,IAAA,CAAAkB,qBAAA,QAAAlB,IAAA,CAAAgB,YAAA,eAAAhB,IAAA,CAAAiB,eAAA;MACA;MACA,YAAAjB,IAAA,CAAAkB,qBAAA;IACA;IACAC,SAAAC,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAC,YAAA;IACA;IACAA,aAAA;MACA;MACA,KAAAC,EAAA,CAAAvB,IAAA,CAAAwB,MAAA;MACA,SAAAD,EAAA,CAAAvB,IAAA,CAAAyB,SAAA;QACAC,OAAA,CAAAC,GAAA;QACA;MACA;;MAEA;MACA,KAAAC,qBAAA;;MAEA;MACA,KAAAC,SAAA;QACA,KAAAC,QAAA,CAAAC,IAAA;MACA;IACA;IACA9C,kBAAA;MACA,IAAA+C,WAAA;QACAhB,YAAA,OAAAhB,IAAA,CAAAgB,YAAA;QACAC,eAAA,OAAAjB,IAAA,CAAAiB,eAAA;QACAC,qBAAA,OAAAlB,IAAA,CAAAgB,YAAA,UAAAhB,IAAA,CAAAiB,eAAA,GACA,KAAAjB,IAAA,CAAAgB,YAAA,QAAAhB,IAAA,CAAAgB,YAAA,eAAAhB,IAAA,CAAAiB,eAAA;QACAgB,uBAAA,OAAAjC,IAAA,CAAAiC,uBAAA;QACAC,oBAAA,OAAAlC,IAAA,CAAAkC,oBAAA;QACA5B,YAAA,MAAA6B,IAAA;MACA;MACAlD,iBAAA,CAAA+C,WAAA;IACA;IACAI,YAAAC,gBAAA;MACA,IAAAA,gBAAA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA,UAAAA,gBAAA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
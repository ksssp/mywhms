{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductGroupFormSchema from './schemas/ProductGroupFormSchema';\nimport { createProductGroup, updateProductGroup } from '@/services/ProductGroupService';\nexport default {\n  name: 'ProductGroupForm',\n  props: [\"formData\", \"submitMode\"],\n  data: function () {\n    return {\n      entityListingUrl: \"/referenceData/productGroups/\",\n      formSchema: ProductGroupFormSchema,\n      formOptions: {\n        validateAfterChanged: true\n      },\n      loadedEntityId: \"\",\n      isSaving: false,\n      formModel: {\n        productGroup: \"\",\n        productSubGroup: \"\",\n        productSubGroupPrefix: \"\",\n        onesideHamaliPerQuintal: 0,\n        yearlyRentPerQuintal: 0\n      }\n    };\n  },\n  created() {\n    this.formModel = JSON.parse(JSON.stringify(this.formData));\n    this.loadedEntityId = this.formData._id;\n  },\n  methods: {\n    submitForm() {\n      // submit form data to the backend - entity - ProductGroup\n      let productGroup = {\n        productGroup: this.formModel.productGroup,\n        productSubGroup: this.formModel.productSubGroup,\n        productSubGroupPrefix: this.formModel.productSubGroupPrefix,\n        onesideHamaliPerQuintal: this.formModel.onesideHamaliPerQuintal,\n        yearlyRentPerQuintal: this.formModel.yearlyRentPerQuintal\n      };\n      if (this.submitMode == \"update\") {\n        productGroup._id = this.loadedEntityId;\n        updateProductGroup(this.loadedEntityId, productGroup).then(response => {\n          var saveActionStatus = response;\n          this.$emit('saved', saveActionStatus);\n        });\n      } else if (this.submitMode == \"create\") {\n        productGroup.creationDate = Date.now();\n        createProductGroup(productGroup).then(response => {\n          var savedObject = response;\n          this.$emit('saved', savedObject);\n        });\n      }\n    },\n    cancelForm() {\n      this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(this.entityListingUrl);\n    }\n  }\n};","map":{"version":3,"names":["ProductGroupFormSchema","createProductGroup","updateProductGroup","name","props","data","entityListingUrl","formSchema","formOptions","validateAfterChanged","loadedEntityId","isSaving","formModel","productGroup","productSubGroup","productSubGroupPrefix","onesideHamaliPerQuintal","yearlyRentPerQuintal","created","JSON","parse","stringify","formData","_id","methods","submitForm","submitMode","then","response","saveActionStatus","$emit","creationDate","Date","now","savedObject","cancelForm","$router","push"],"sources":["src/pages/referenceData/forms/ProductGroupForm.vue"],"sourcesContent":["<template>\n    <div class=\"tables col-md-12 app-crud-form py-4 my-2\">\n        <form action=\"\" @submit.prevent=\"submitForm\">\n            <vue-form-generator tag=\"div\" :schema=\"formSchema\" :options=\"formOptions\" :model=\"formModel\"/>\n            <div class=\"d-flex justify-content-end mt-3 pr-4\">\n                <button v-on:click=\"cancelForm\" type=\"button\" class=\"btn btn-secondary btn-md\">\n                        Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-md\">\n                    {{ isSaving ? 'Saving...' : 'Save' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script scoped lang=\"js\">\n\nimport ProductGroupFormSchema from './schemas/ProductGroupFormSchema';\nimport { createProductGroup, updateProductGroup } from '@/services/ProductGroupService';\n\nexport default {\n    name: 'ProductGroupForm',\n    props: [\n        \"formData\",\n        \"submitMode\"\n    ],\n    data: function () {\n        return {\n            entityListingUrl: \"/referenceData/productGroups/\",\n            formSchema: ProductGroupFormSchema,\n            formOptions: {\n                validateAfterChanged: true\n            },\n            loadedEntityId: \"\",\n            isSaving: false,\n            formModel: {\n                productGroup: \"\",\n                productSubGroup: \"\",\n                productSubGroupPrefix: \"\",\n                onesideHamaliPerQuintal: 0,\n                yearlyRentPerQuintal: 0\n            }\n        }\n    },\n    created() {\n        this.formModel = JSON.parse(JSON.stringify(this.formData));\n        this.loadedEntityId = this.formData._id;\n    },\n    methods: {\n        submitForm() {\n            // submit form data to the backend - entity - ProductGroup\n            let productGroup = {\n                productGroup: this.formModel.productGroup,\n                productSubGroup: this.formModel.productSubGroup,\n                productSubGroupPrefix: this.formModel.productSubGroupPrefix,\n                onesideHamaliPerQuintal: this.formModel.onesideHamaliPerQuintal,\n                yearlyRentPerQuintal: this.formModel.yearlyRentPerQuintal\n            };\n\n            if(this.submitMode==\"update\") {\n                productGroup._id = this.loadedEntityId;\n                updateProductGroup(this.loadedEntityId, productGroup).then(response => {\n                    var saveActionStatus = response;\n                    this.$emit('saved', saveActionStatus);\n                });\n            } else if (this.submitMode == \"create\") {\n                productGroup.creationDate = Date.now();\n                createProductGroup(productGroup).then(response => {\n                    var savedObject = response;\n                    this.$emit('saved', savedObject);\n                });\n            }\n        },\n        cancelForm() {\n            this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(this.entityListingUrl);\n        }\n    }\n}\n</script>"],"mappings":";AAkBA,OAAAA,sBAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA,GACA,YACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,gBAAA;MACAC,UAAA,EAAAP,sBAAA;MACAQ,WAAA;QACAC,oBAAA;MACA;MACAC,cAAA;MACAC,QAAA;MACAC,SAAA;QACAC,YAAA;QACAC,eAAA;QACAC,qBAAA;QACAC,uBAAA;QACAC,oBAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAN,SAAA,GAAAO,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAC,QAAA;IACA,KAAAZ,cAAA,QAAAY,QAAA,CAAAC,GAAA;EACA;EACAC,OAAA;IACAC,WAAA;MACA;MACA,IAAAZ,YAAA;QACAA,YAAA,OAAAD,SAAA,CAAAC,YAAA;QACAC,eAAA,OAAAF,SAAA,CAAAE,eAAA;QACAC,qBAAA,OAAAH,SAAA,CAAAG,qBAAA;QACAC,uBAAA,OAAAJ,SAAA,CAAAI,uBAAA;QACAC,oBAAA,OAAAL,SAAA,CAAAK;MACA;MAEA,SAAAS,UAAA;QACAb,YAAA,CAAAU,GAAA,QAAAb,cAAA;QACAR,kBAAA,MAAAQ,cAAA,EAAAG,YAAA,EAAAc,IAAA,CAAAC,QAAA;UACA,IAAAC,gBAAA,GAAAD,QAAA;UACA,KAAAE,KAAA,UAAAD,gBAAA;QACA;MACA,gBAAAH,UAAA;QACAb,YAAA,CAAAkB,YAAA,GAAAC,IAAA,CAAAC,GAAA;QACAhC,kBAAA,CAAAY,YAAA,EAAAc,IAAA,CAAAC,QAAA;UACA,IAAAM,WAAA,GAAAN,QAAA;UACA,KAAAE,KAAA,UAAAI,WAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAAT,UAAA,oBAAAI,KAAA,sBAAAM,OAAA,CAAAC,IAAA,MAAA/B,gBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
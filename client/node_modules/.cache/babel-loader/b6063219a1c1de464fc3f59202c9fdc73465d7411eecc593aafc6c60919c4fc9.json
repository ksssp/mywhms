{"ast":null,"code":"import Vue from \"vue\";\nimport SortedTablePlugin from \"vue-sorted-table\";\nimport axios from \"axios\";\nimport EmployeeDetailsModal from \"../forms/EmployeeDetailsModal.vue\";\nVue.use(SortedTablePlugin, {\n  ascIcon: '<i class=\"mdi mdi-arrow-down\"></i>',\n  descIcon: '<i class=\"mdi mdi-arrow-up\"></i>'\n});\nexport default {\n  name: 'AppDataTable',\n  components: {\n    EmployeeDetailsModal\n  },\n  props: [\"dataUrl\", \"tableFields\", \"rowActionsRequired\", \"editRowModalProps\", \"itemName\"],\n  data() {\n    return {\n      items: [],\n      fields: [],\n      currentPage: 1,\n      perPage: 5,\n      pageOptions: [{\n        value: 200,\n        text: \"Per page\"\n      }, 5, 10, 25, 50],\n      sortBy: '',\n      sortDesc: false,\n      sortDirection: 'asc',\n      totalRows: 1,\n      filter: null,\n      filterOn: [],\n      rowsHaveActions: true,\n      editModalProps: {\n        modalComponentName: null,\n        modalTitle: null,\n        upsertDataUrl: null,\n        submitAction: null,\n        inputObject: null\n      }\n    };\n  },\n  created() {\n    this.fields = this.tableFields;\n    this.rowsHaveActions = this.rowActionsRequired;\n    this.editModalProps.modalComponentName = this.editRowModalProps.modalComponentName;\n    this.editModalProps.detailsModalTitle = this.editRowModalProps.detailsModalTitle;\n    this.editModalProps.upsertDataUrl = this.editRowModalProps.upsertDataUrl;\n    this.editModalProps.submitAction = this.editRowModalProps.submitAction;\n    this.editModalProps.inputObject = this.editRowModalProps.inputObject;\n    axios.get(this.dataUrl).then(res => {\n      this.items = res.data;\n      this.totalRows = this.items.length;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  computed: {\n    dynamicComponentProperties: function () {\n      return {\n        modalProps: {\n          detailsModalTitle: this.editModalProps.detailsModalTitle,\n          upsertDataUrl: this.editModalProps.upsertDataUrl,\n          submitAction: this.editModalProps.submitAction,\n          inputObject: {\n            _id: this.editModalProps.inputObject._id,\n            employeeCode: this.editModalProps.inputObject.employeeCode,\n            employeeFullName: this.editModalProps.inputObject.employeeFullName,\n            designation: this.editModalProps.inputObject.designation,\n            monthlySalary: this.editModalProps.inputObject.monthlySalary,\n            creationDate: this.editModalProps.inputObject.creationDate\n          }\n        }\n      };\n    },\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields.filter(f => f.sortable).map(f => {\n        return {\n          text: f.label,\n          value: f.key\n        };\n      });\n    }\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  methods: {\n    editItem(item, index, button) {\n      // this.editRowModal.title = `Row index: ${index}`;\n      // this.editRowModal.content = JSON.stringify(item, null, 2);\n      this.editModalProps.inputObject = item;\n      this.$bvModal.show(this.editModalProps.modalComponentName);\n    },\n    deleteItem(item, index, button) {\n      this.deleteRowModal.title = `Row index: ${index}`;\n      this.deleteRowModal.content = JSON.stringify(item, null, 2);\n      this.$root.$emit('bv::show::modal', this.deleteRowModal.id, button);\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  }\n};","map":{"version":3,"names":["Vue","SortedTablePlugin","axios","EmployeeDetailsModal","use","ascIcon","descIcon","name","components","props","data","items","fields","currentPage","perPage","pageOptions","value","text","sortBy","sortDesc","sortDirection","totalRows","filter","filterOn","rowsHaveActions","editModalProps","modalComponentName","modalTitle","upsertDataUrl","submitAction","inputObject","created","tableFields","rowActionsRequired","editRowModalProps","detailsModalTitle","get","dataUrl","then","res","length","catch","error","console","log","computed","dynamicComponentProperties","modalProps","_id","employeeCode","employeeFullName","designation","monthlySalary","creationDate","sortOptions","f","sortable","map","label","key","mounted","methods","editItem","item","index","button","$bvModal","show","deleteItem","deleteRowModal","title","content","JSON","stringify","$root","$emit","id","onFiltered","filteredItems"],"sources":["src/components/tables/AppDataTable.vue"],"sourcesContent":["<template>\n    <b-container fluid>\n        <b-row>\n            <b-col cols=\"1\">\n                <label for=\"filter-input\" class=\"ml-auto mb-0\">Search</label>\n            </b-col>\n            <b-col cols=\"4\">\n                <b-form-group label-for=\"filter-input\" aria-controls=\"table-list\">Â \n                    <b-form-input id=\"filter-input\" v-model=\"filter\" type=\"search\"\n                        placeholder=\"Type to search data in table\" size=\"lg\"></b-form-input>\n                </b-form-group>\n            </b-col>\n            <b-col cols=\"2\" class=\"float-end\">\n                <b-form-group label-for=\"per-page-select\" aria-controls=\"table-list\">\n                    <b-form-select id=\"per-page-select\" v-model=\"perPage\" :options=\"pageOptions\" size=\"md\">\n                    </b-form-select>\n                </b-form-group>\n            </b-col>\n            <b-col cols=\"5\" class=\"float-end\">\n                <b-pagination v-model=\"currentPage\" :total-rows=\"totalRows\" :per-page=\"perPage\" aria-controls=\"table-list\" align=\"left\">\n                </b-pagination>\n            </b-col>\n        </b-row>\n        <b-table hover responsive show-empty id=\"table-list\" :items=\"items\" :fields=\"fields\" :per-page=\"perPage\"\n            :current-page=\"currentPage\" :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :filter=\"filter\"\n            @filtered=\"onFiltered\">\n\n            <template v-if=\"rowsHaveActions\" #cell(actions)=\"row\">\n                <b-button size=\"sm\" @click=\"editItem (row.item, row.index, $event.target)\" class=\"mr-1\">\n                    Edit\n                </b-button>\n                <b-button size=\"sm\" @click=\"deleteItem (row.item, row.index, $event.target)\" class=\"mr-1\">\n                    Delete\n                </b-button>\n            </template>\n        </b-table>\n\n        <!-- Setup Edit & Delete Modals\n            https://jwkicklighter.com/posts/pass-props-to-dynamic-vue-components/\n        <component :is=\"editModalProps.modalComponentName\" v-bind=\"dynamicComponentProperties\">\n        </component>  -->\n    </b-container>\n</template>\n  \n<script>\n\nimport Vue from \"vue\";\nimport SortedTablePlugin from \"vue-sorted-table\";\nimport axios from \"axios\";\n\nimport EmployeeDetailsModal from \"../forms/EmployeeDetailsModal.vue\";\n\nVue.use(SortedTablePlugin, {\n    ascIcon: '<i class=\"mdi mdi-arrow-down\"></i>',\n    descIcon: '<i class=\"mdi mdi-arrow-up\"></i>'\n});\n\nexport default {\n    name: 'AppDataTable',\n    components: {\n        EmployeeDetailsModal\n    },\n    props: [\n        \"dataUrl\",\n        \"tableFields\",\n        \"rowActionsRequired\",\n        \"editRowModalProps\",\n        \"itemName\"\n    ],\n    data() {\n        return {\n            items: [],\n            fields: [],\n            currentPage: 1,\n            perPage: 5,\n            pageOptions: [{ value: 200, text: \"Per page\" }, 5, 10, 25, 50],\n            sortBy: '',\n            sortDesc: false,\n            sortDirection: 'asc',\n            totalRows: 1,\n            filter: null,\n            filterOn: [],\n            rowsHaveActions: true,\n            editModalProps: {\n                modalComponentName: null,\n                modalTitle: null,\n                upsertDataUrl: null,\n                submitAction: null,\n                inputObject: null\n            }\n        }\n    },\n    created() {\n        this.fields = this.tableFields;\n        this.rowsHaveActions = this.rowActionsRequired;\n        this.editModalProps.modalComponentName = this.editRowModalProps.modalComponentName;\n        this.editModalProps.detailsModalTitle = this.editRowModalProps.detailsModalTitle;\n        this.editModalProps.upsertDataUrl = this.editRowModalProps.upsertDataUrl;\n        this.editModalProps.submitAction = this.editRowModalProps.submitAction;\n        this.editModalProps.inputObject = this.editRowModalProps.inputObject;\n        axios.get(this.dataUrl).then(res => {\n            this.items = res.data;\n            this.totalRows = this.items.length;\n        }).catch(error => {\n            console.log(error);\n        });\n\n    },\n    computed: {\n        dynamicComponentProperties : function() {\n            return {\n                modalProps: {\n                    detailsModalTitle: this.editModalProps.detailsModalTitle,\n                    upsertDataUrl: this.editModalProps.upsertDataUrl,\n                    submitAction: this.editModalProps.submitAction,\n                    inputObject: {\n                        _id: this.editModalProps.inputObject._id,\n                        employeeCode: this.editModalProps.inputObject.employeeCode,\n                        employeeFullName: this.editModalProps.inputObject.employeeFullName,\n                        designation: this.editModalProps.inputObject.designation,\n                        monthlySalary: this.editModalProps.inputObject.monthlySalary,\n                        creationDate: this.editModalProps.inputObject.creationDate\n                    } \n                }\n            }\n        },\n        sortOptions() {\n            // Create an options list from our fields\n            return this.fields\n                .filter(f => f.sortable)\n                .map(f => {\n                    return { text: f.label, value: f.key }\n                })\n        }\n    },\n    mounted() {\n        // Set the initial number of items\n        this.totalRows = this.items.length\n    },\n    methods: {\n        editItem(item, index, button) {\n            // this.editRowModal.title = `Row index: ${index}`;\n            // this.editRowModal.content = JSON.stringify(item, null, 2);\n            this.editModalProps.inputObject = item;\n            this.$bvModal.show(this.editModalProps.modalComponentName);\n        },\n        deleteItem(item, index, button) {\n            this.deleteRowModal.title = `Row index: ${index}`;\n            this.deleteRowModal.content = JSON.stringify(item, null, 2);\n            this.$root.$emit('bv::show::modal', this.deleteRowModal.id, button);\n        },\n        onFiltered(filteredItems) {\n            // Trigger pagination to update the number of buttons/pages due to filtering\n            this.totalRows = filteredItems.length\n            this.currentPage = 1\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
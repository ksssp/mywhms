{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LodgementFormSchema from './schemas/LodgementFormSchema';\nimport { createEmployee, updateEmployee } from '@/services/EmployeeService';\nexport default {\n  name: 'EmployeeForm',\n  props: [\"formData\", \"submitMode\"],\n  data: function () {\n    return {\n      entityListingUrl: \"/referenceData/employees/\",\n      formSchema: EmployeeFormSchema,\n      formOptions: {\n        validateAfterChanged: true\n      },\n      loadedEntityId: \"\",\n      isSaving: false,\n      formModel: {\n        employeeCode: \"\",\n        employeeFullName: \"\",\n        designation: \"\",\n        monthlySalary: \"\"\n      }\n    };\n  },\n  created() {\n    this.formModel = JSON.parse(JSON.stringify(this.formData));\n    this.loadedEntityId = this.formData._id;\n  },\n  methods: {\n    submitForm() {\n      // submit form data to the backend - entity - Employee\n      let employee = {\n        employeeCode: this.formModel.employeeCode,\n        employeeFullName: this.formModel.employeeFullName,\n        designation: this.formModel.designation,\n        monthlySalary: this.formModel.monthlySalary\n      };\n      if (this.submitMode == \"update\") {\n        employee._id = this.loadedEntityId;\n        updateEmployee(this.loadedEntityId, employee).then(response => {\n          var saveActionStatus = response;\n          this.$emit('saved', saveActionStatus);\n        });\n      } else if (this.submitMode == \"create\") {\n        employee.creationDate = Date.now();\n        createEmployee(employee).then(response => {\n          var savedObject = response;\n          this.$emit('saved', savedObject);\n        });\n      }\n    },\n    cancelForm() {\n      this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(this.entityListingUrl);\n    }\n  }\n};","map":{"version":3,"names":["LodgementFormSchema","createEmployee","updateEmployee","name","props","data","entityListingUrl","formSchema","EmployeeFormSchema","formOptions","validateAfterChanged","loadedEntityId","isSaving","formModel","employeeCode","employeeFullName","designation","monthlySalary","created","JSON","parse","stringify","formData","_id","methods","submitForm","employee","submitMode","then","response","saveActionStatus","$emit","creationDate","Date","now","savedObject","cancelForm","$router","push"],"sources":["src/pages/inventory/forms/LotForm.vue"],"sourcesContent":["<template>\n    <div class=\"tables col-md-12 app-crud-form py-4 my-2\">\n        <form action=\"\" @submit.prevent=\"submitForm\">\n            <vue-form-generator tag=\"div\" :schema=\"formSchema\" :options=\"formOptions\" :model=\"formModel\"/>\n            <div class=\"d-flex justify-content-end mt-3 pr-4\">\n                <button v-on:click=\"cancelForm\" type=\"button\" class=\"btn btn-secondary btn-md\">\n                        Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-md\">\n                    {{ isSaving ? 'Saving...' : 'Save' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script scoped lang=\"js\">\n\nimport LodgementFormSchema from './schemas/LodgementFormSchema';\nimport { createEmployee, updateEmployee } from '@/services/EmployeeService';\n\nexport default {\n    name: 'EmployeeForm',\n    props: [\n        \"formData\",\n        \"submitMode\"\n    ],\n    data: function () {\n        return {\n            entityListingUrl: \"/referenceData/employees/\",\n            formSchema: EmployeeFormSchema,\n            formOptions: {\n                validateAfterChanged: true\n            },\n            loadedEntityId: \"\",\n            isSaving: false,\n            formModel: {\n                employeeCode: \"\",\n                employeeFullName: \"\",\n                designation: \"\",\n                monthlySalary: \"\"\n            }\n        }\n    },\n    created() {\n        this.formModel = JSON.parse(JSON.stringify(this.formData));\n        this.loadedEntityId = this.formData._id;\n    },\n    methods: {\n        submitForm() {\n            // submit form data to the backend - entity - Employee\n            let employee = {\n                employeeCode: this.formModel.employeeCode,\n                employeeFullName: this.formModel.employeeFullName,\n                designation: this.formModel.designation,\n                monthlySalary: this.formModel.monthlySalary\n            };\n\n            if(this.submitMode==\"update\") {\n                employee._id = this.loadedEntityId;\n                updateEmployee(this.loadedEntityId, employee).then(response => {\n                    var saveActionStatus = response;\n                    this.$emit('saved', saveActionStatus);\n                });\n            } else if (this.submitMode == \"create\") {\n                employee.creationDate = Date.now();\n                createEmployee(employee).then(response => {\n                    var savedObject = response;\n                    this.$emit('saved', savedObject);\n                });\n            }\n        },\n        cancelForm() {\n            this.submitMode == 'update' ? this.$emit('cancelForm') : this.$router.push(this.entityListingUrl);\n        }\n    }\n}\n</script>\n"],"mappings":";AAkBA,OAAAA,mBAAA;AACA,SAAAC,cAAA,EAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,KAAA,GACA,YACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,gBAAA;MACAC,UAAA,EAAAC,kBAAA;MACAC,WAAA;QACAC,oBAAA;MACA;MACAC,cAAA;MACAC,QAAA;MACAC,SAAA;QACAC,YAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,aAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAL,SAAA,GAAAM,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAC,QAAA;IACA,KAAAX,cAAA,QAAAW,QAAA,CAAAC,GAAA;EACA;EACAC,OAAA;IACAC,WAAA;MACA;MACA,IAAAC,QAAA;QACAZ,YAAA,OAAAD,SAAA,CAAAC,YAAA;QACAC,gBAAA,OAAAF,SAAA,CAAAE,gBAAA;QACAC,WAAA,OAAAH,SAAA,CAAAG,WAAA;QACAC,aAAA,OAAAJ,SAAA,CAAAI;MACA;MAEA,SAAAU,UAAA;QACAD,QAAA,CAAAH,GAAA,QAAAZ,cAAA;QACAT,cAAA,MAAAS,cAAA,EAAAe,QAAA,EAAAE,IAAA,CAAAC,QAAA;UACA,IAAAC,gBAAA,GAAAD,QAAA;UACA,KAAAE,KAAA,UAAAD,gBAAA;QACA;MACA,gBAAAH,UAAA;QACAD,QAAA,CAAAM,YAAA,GAAAC,IAAA,CAAAC,GAAA;QACAjC,cAAA,CAAAyB,QAAA,EAAAE,IAAA,CAAAC,QAAA;UACA,IAAAM,WAAA,GAAAN,QAAA;UACA,KAAAE,KAAA,UAAAI,WAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAAT,UAAA,oBAAAI,KAAA,sBAAAM,OAAA,CAAAC,IAAA,MAAAhC,gBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
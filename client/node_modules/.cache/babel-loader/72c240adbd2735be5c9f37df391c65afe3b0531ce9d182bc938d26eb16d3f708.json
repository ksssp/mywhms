{"ast":null,"code":"import { validationMixin } from 'vuelidate';\nimport { required, minLength, numeric } from 'vuelidate/lib/validators';\nimport { createEmployee, editEmployee } from '@/services/EmployeeService';\nexport default {\n  name: 'EmployeeDetailsModal',\n  mixins: [validationMixin],\n  props: [\"modalProps\"],\n  data: function () {\n    return {\n      modalTitle: this.modalProps.detailsModalTitle,\n      form: {\n        _id: null,\n        employeeCode: null,\n        employeeFullName: null,\n        designation: null,\n        monthlySalary: null,\n        creationDate: null\n      },\n      footerBgVariant: \"light\"\n    };\n  },\n  created() {\n    console.log(\"inside EmployeeDetailsModal : \", this.modalProps.inputObject, this.modalProps.upsertDataUrl, this.modalProps.submitAction, this.modalProps.detailsModalTitle);\n    if (this.modalProps.inputObject != null) {\n      this.form._id = this.modalProps.inputObject._id;\n      this.form.employeeCode = this.modalProps.inputObject.employeeCode;\n      this.form.employeeFullName = this.modalProps.inputObject.employeeFullName;\n      this.form.designation = this.modalProps.inputObject.designation;\n      this.form.monthlySalary = this.modalProps.inputObject.monthlySalary;\n      this.form.creationDate = this.modalProps.inputObject.creationDate;\n    }\n  },\n  validations: {\n    form: {\n      employeeCode: {\n        required,\n        minLength: minLength(6)\n      },\n      employeeFullName: {\n        required,\n        minLength: minLength(3)\n      },\n      designation: {\n        required\n      },\n      monthlySalary: {\n        required,\n        numeric\n      }\n    }\n  },\n  methods: {\n    handleOk(bvModalEvent) {\n      bvModalEvent.preventDefault();\n      this.handleSubmit();\n    },\n    handleSubmit() {\n      // Exit when the form isn't valid\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        console.log(\"There are errors in the form\");\n        return;\n      }\n\n      // Add or Update an Employee details\n      this.upsertEmployeeDetails();\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$bvModal.hide('EmployeeDetailsModal');\n      });\n    },\n    upsertEmployeeDetails() {\n      let upsertedEmployee = {\n        _id: this.modalProps.inputObject._id,\n        employeeCode: this.form.employeeCode,\n        employeeFullName: this.form.employeeFullName,\n        designation: this.form.designation,\n        monthlySalary: this.form.monthlySalary\n      };\n      if (this.modalProps.submitAction == \"create\") {\n        upsertedEmployee.creationDate = new Date();\n        createEmployee(upsertedEmployee).then(response => {\n          this.form = response;\n        });\n      } else if (this.modalProps.submitAction == \"update\") {\n        editEmployee(upsertedEmployee).then(response => {\n          this.form = response;\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["validationMixin","required","minLength","numeric","createEmployee","editEmployee","name","mixins","props","data","modalTitle","modalProps","detailsModalTitle","form","_id","employeeCode","employeeFullName","designation","monthlySalary","creationDate","footerBgVariant","created","console","log","inputObject","upsertDataUrl","submitAction","validations","methods","handleOk","bvModalEvent","preventDefault","handleSubmit","$v","$touch","$anyError","upsertEmployeeDetails","$nextTick","$bvModal","hide","upsertedEmployee","Date","then","response"],"sources":["src/components/forms/EmployeeDetailsModal.vue"],"sourcesContent":["<template>\n    <div>\n        <b-modal centered id=\"EmployeeDetailsModal\" :footer-bg-variant=\"footerBgVariant\"\n            size=\"md\" @ok=\"handleOk\">\n            <template #modal-title>{{ modalTitle }}</template>\n            <section class=\"validation\">\n                <div class=\"grid-margin stretch-card col-lg-12\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <b-form>\n                                <b-form-group id=\"employee-code-group\" label=\"Employee Code\" label-for=\"employee-code-group\">\n                                    <b-form-input id=\"employee-code-group\" name=\"employee-code-group\"\n                                        v-model=\"$v.form.employeeCode.$model\"\n                                        :state=\"$v.form.employeeCode.$dirty ? !$v.form.employeeCode.$error : null\"\n                                        aria-describedby=\"employee-code-live-feedback\"\n                                        placeholder=\"Employee Code\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"employee-code-live-feedback\">\n                                        This is a required field and must be exactly 6 characters of the format SSCSXX.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"employee-full-name-group\" label=\"Employee Full Name\" label-for=\"employee-full-name\">\n                                    <b-form-input id=\"employee-full-name\" name=\"employee-full-name\"\n                                        v-model=\"$v.form.employeeFullName.$model\"\n                                        :state=\"$v.form.employeeFullName.$dirty ? !$v.form.employeeFullName.$error : null\"\n                                        aria-describedby=\"employee-full-name-live-feedback\"\n                                        placeholder=\"Employee Full Name\"></b-form-input>\n\n                                    <b-form-invalid-feedback id=\"product-sub-group-live-feedback\">\n                                        This is a required field and must be at least 3 characters.\n                                    </b-form-invalid-feedback>\n                                </b-form-group>\n\n                                <b-form-group id=\"designation-group\" label=\"Designation\" label-for=\"designation\">\n                                    <b-form-input id=\"designation\" name=\"designation\"\n                                        v-model=\"$v.form.designation.$model\"\n                                        :state=\"$v.form.designation.$dirty ? !$v.form.designation.$error : null\"\n                                        aria-describedby=\"designation-live-feedback\"\n                                        placeholder=\"Designation\"></b-form-input>\n                                </b-form-group>\n\n\n                                <b-form-group id=\"monthly-salary-group\" label=\"Monthly Salary\" label-for=\"monthly-salary\">\n                                    <b-form-input id=\"monthly-salary\" name=\"monthly-salary\"\n                                        v-model=\"$v.form.monthlySalary.$model\"\n                                        :state=\"$v.form.monthlySalary.$dirty ? !$v.form.monthlySalary.$error : null\"\n                                        aria-describedby=\"monthly-salary-live-feedback\"\n                                        placeholder=\"Monthly Salary\"></b-form-input>\n                                </b-form-group>\n                            </b-form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </b-modal>\n    </div>\n</template>\n  \n<script scoped lang=\"js\">\nimport { validationMixin } from 'vuelidate';\nimport { required, minLength, numeric } from 'vuelidate/lib/validators';\nimport { createEmployee, editEmployee } from '@/services/EmployeeService'; \n\nexport default {\n    name: 'EmployeeDetailsModal',\n    mixins: [validationMixin],\n    props: [\n        \"modalProps\"\n    ],\n    data: function () {\n        return {\n            modalTitle: this.modalProps.detailsModalTitle,\n            form: {\n                _id: null,\n                employeeCode: null,\n                employeeFullName: null,\n                designation: null,\n                monthlySalary: null,\n                creationDate: null\n            },\n            footerBgVariant: \"light\",\n        }\n    },\n    created() {\n        console.log(\"inside EmployeeDetailsModal : \", this.modalProps.inputObject, this.modalProps.upsertDataUrl, \n            this.modalProps.submitAction, this.modalProps.detailsModalTitle);\n        if(this.modalProps.inputObject != null) {\n            this.form._id = this.modalProps.inputObject._id;\n            this.form.employeeCode = this.modalProps.inputObject.employeeCode;\n            this.form.employeeFullName = this.modalProps.inputObject.employeeFullName;\n            this.form.designation = this.modalProps.inputObject.designation;\n            this.form.monthlySalary = this.modalProps.inputObject.monthlySalary;\n            this.form.creationDate = this.modalProps.inputObject.creationDate;\n        }\n    },\n    validations: {\n        form: {\n            employeeCode: {\n                required,\n                minLength: minLength(6)\n            },\n            employeeFullName: {\n                required,\n                minLength: minLength(3)\n            },\n            designation: {\n                required,\n            },\n            monthlySalary: {\n                required,\n                numeric\n            }\n        }\n    },\n    methods: {\n        handleOk(bvModalEvent) {\n            bvModalEvent.preventDefault()\n            this.handleSubmit()\n        },\n        handleSubmit() {\n            // Exit when the form isn't valid\n            this.$v.form.$touch()\n            if (this.$v.form.$anyError) {\n                console.log(\"There are errors in the form\");\n                return\n            }\n\n            // Add or Update an Employee details\n            this.upsertEmployeeDetails();\n\n            // Hide the modal manually\n            this.$nextTick(() => {\n                this.$bvModal.hide('EmployeeDetailsModal');\n            })\n        },\n        upsertEmployeeDetails() {\n            let upsertedEmployee = {\n                _id: this.modalProps.inputObject._id,\n                employeeCode: this.form.employeeCode,\n                employeeFullName: this.form.employeeFullName,\n                designation: this.form.designation,\n                monthlySalary: this.form.monthlySalary,\n            };\n            if(this.modalProps.submitAction == \"create\") {\n                upsertedEmployee.creationDate = new Date();\n                createEmployee(upsertedEmployee).then(response => {\n                    this.form = response;\n                });\n            } else if(this.modalProps.submitAction == \"update\") {\n                editEmployee(upsertedEmployee).then(response => {\n                    this.form = response;\n                });\n            }\n            \n        }\n    }\n}\n</script>"],"mappings":"AA4DA,SAAAA,eAAA;AACA,SAAAC,QAAA,EAAAC,SAAA,EAAAC,OAAA;AACA,SAAAC,cAAA,EAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAP,eAAA;EACAQ,KAAA,GACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,UAAA,OAAAC,UAAA,CAAAC,iBAAA;MACAC,IAAA;QACAC,GAAA;QACAC,YAAA;QACAC,gBAAA;QACAC,WAAA;QACAC,aAAA;QACAC,YAAA;MACA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA,wCAAAZ,UAAA,CAAAa,WAAA,OAAAb,UAAA,CAAAc,aAAA,EACA,KAAAd,UAAA,CAAAe,YAAA,OAAAf,UAAA,CAAAC,iBAAA;IACA,SAAAD,UAAA,CAAAa,WAAA;MACA,KAAAX,IAAA,CAAAC,GAAA,QAAAH,UAAA,CAAAa,WAAA,CAAAV,GAAA;MACA,KAAAD,IAAA,CAAAE,YAAA,QAAAJ,UAAA,CAAAa,WAAA,CAAAT,YAAA;MACA,KAAAF,IAAA,CAAAG,gBAAA,QAAAL,UAAA,CAAAa,WAAA,CAAAR,gBAAA;MACA,KAAAH,IAAA,CAAAI,WAAA,QAAAN,UAAA,CAAAa,WAAA,CAAAP,WAAA;MACA,KAAAJ,IAAA,CAAAK,aAAA,QAAAP,UAAA,CAAAa,WAAA,CAAAN,aAAA;MACA,KAAAL,IAAA,CAAAM,YAAA,QAAAR,UAAA,CAAAa,WAAA,CAAAL,YAAA;IACA;EACA;EACAQ,WAAA;IACAd,IAAA;MACAE,YAAA;QACAd,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAc,gBAAA;QACAf,QAAA;QACAC,SAAA,EAAAA,SAAA;MACA;MACAe,WAAA;QACAhB;MACA;MACAiB,aAAA;QACAjB,QAAA;QACAE;MACA;IACA;EACA;EACAyB,OAAA;IACAC,SAAAC,YAAA;MACAA,YAAA,CAAAC,cAAA;MACA,KAAAC,YAAA;IACA;IACAA,aAAA;MACA;MACA,KAAAC,EAAA,CAAApB,IAAA,CAAAqB,MAAA;MACA,SAAAD,EAAA,CAAApB,IAAA,CAAAsB,SAAA;QACAb,OAAA,CAAAC,GAAA;QACA;MACA;;MAEA;MACA,KAAAa,qBAAA;;MAEA;MACA,KAAAC,SAAA;QACA,KAAAC,QAAA,CAAAC,IAAA;MACA;IACA;IACAH,sBAAA;MACA,IAAAI,gBAAA;QACA1B,GAAA,OAAAH,UAAA,CAAAa,WAAA,CAAAV,GAAA;QACAC,YAAA,OAAAF,IAAA,CAAAE,YAAA;QACAC,gBAAA,OAAAH,IAAA,CAAAG,gBAAA;QACAC,WAAA,OAAAJ,IAAA,CAAAI,WAAA;QACAC,aAAA,OAAAL,IAAA,CAAAK;MACA;MACA,SAAAP,UAAA,CAAAe,YAAA;QACAc,gBAAA,CAAArB,YAAA,OAAAsB,IAAA;QACArC,cAAA,CAAAoC,gBAAA,EAAAE,IAAA,CAAAC,QAAA;UACA,KAAA9B,IAAA,GAAA8B,QAAA;QACA;MACA,gBAAAhC,UAAA,CAAAe,YAAA;QACArB,YAAA,CAAAmC,gBAAA,EAAAE,IAAA,CAAAC,QAAA;UACA,KAAA9B,IAAA,GAAA8B,QAAA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
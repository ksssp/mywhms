{"ast":null,"code":"import { getProductGroupById, deleteProductGroup } from \"@/services/ProductGroupService\";\nimport ProductGroupForm from \"../forms/ProductGroupForm.vue\";\nexport default {\n  name: \"ProductGroupDetails\",\n  components: {\n    ProductGroupForm\n  },\n  data: function () {\n    return {\n      entityName: \"Product Gorup\",\n      entityNamePlural: \"Product Groups\",\n      pageTitle: \"Product Group Details\",\n      entityListingUrl: \"/referenceData/productGroups/\",\n      entityTitle: \"\",\n      loadedEntity: null,\n      loadedEntityId: null,\n      entityDoesNotExistMessage: \"The Product Group you are looking for does not exist.\",\n      editMode: false,\n      submitMode: \"update\",\n      entityDetailsTable: {\n        fields: [{\n          key: \"infoLabel\",\n          label: \"\",\n          sortable: false,\n          thStyle: \"width: 20%;\"\n        }, {\n          key: \"infoValue\",\n          label: \"\",\n          sortable: false,\n          thStyle: \"word-wrap: break-word;\"\n        }],\n        items: [\n        // update entity specific json data in an array format - Product Group\n        {\n          infoLabel: \"Product Group\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Product Sub Group\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Product Sub Group Prefix\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Yearly Rent per Quintal\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"One side Hamali per Quintal\",\n          infoValue: \"\"\n        }, {\n          infoLabel: \"Creation Date\",\n          infoValue: \"\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.loadedEntityId = this.$route.params._id;\n    this.loadEntityData(this.loadedEntityId);\n  },\n  methods: {\n    loadEntityData(entityId) {\n      // load entity data from backend: entity - Product Group\n      getProductGroupById(entityId).then(response => {\n        this.loadedEntity = JSON.parse(JSON.stringify(response));\n        console.log(this.loadedEntity);\n        if (this.loadedEntity != null) {\n          this.entityTitle = this.loadedEntity.productSubGroupPrefix;\n          this.entityDetailsTable.items[0].infoValue = this.loadedEntity.productGroup;\n          this.entityDetailsTable.items[1].infoValue = this.loadedEntity.productSubGroup;\n          this.entityDetailsTable.items[2].infoValue = this.loadedEntity.productSubGroupPrefix;\n          this.entityDetailsTable.items[3].infoValue = this.loadedEntity.yearlyRentPerQuintal == null ? \"\" : \"Rs. \" + this.loadedEntity.yearlyRentPerQuintal + \"/-\";\n          this.entityDetailsTable.items[4].infoValue = this.loadedEntity.onesideHamaliPerQuintal == null ? \"\" : \"Rs. \" + this.loadedEntity.onesideHamaliPerQuintal + \"/-\";\n          this.entityDetailsTable.items[5].infoValue = new Date(this.loadedEntity.creationDate).toLocaleString();\n        }\n      });\n    },\n    editLoadedEntity() {\n      this.editMode = true;\n    },\n    editCancelled() {\n      this.editMode = false;\n    },\n    saved(saveActionStatus) {\n      if (saveActionStatus) {\n        this.loadEntityData(this.loadedEntityId);\n        this.editMode = false;\n      }\n    },\n    deleteLoadedEntity() {\n      this.$bvModal.msgBoxConfirm('Are you sure you want to delete the ' + this.entityName + '?', {\n        title: 'Please Confirm',\n        size: 'md',\n        buttonSize: 'md',\n        okVariant: 'danger',\n        okTitle: 'Confirm',\n        cancelTitle: 'Cancel',\n        footerClass: 'p-2',\n        hideHeaderClose: false,\n        centered: true,\n        footerBgVariant: 'light',\n        headerBgVariant: 'light'\n      }).then(value => {\n        if (value == true) {\n          // delete entity data at the backend: entity - Product Group\n          deleteProductGroup(this.loadedEntityId).then(response => {\n            if (response.status == true) {\n              this.$router.replace(this.entityListingUrl);\n            } else {\n              console.log(this.entityName, \" deletion failed\");\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["getProductGroupById","deleteProductGroup","ProductGroupForm","name","components","data","entityName","entityNamePlural","pageTitle","entityListingUrl","entityTitle","loadedEntity","loadedEntityId","entityDoesNotExistMessage","editMode","submitMode","entityDetailsTable","fields","key","label","sortable","thStyle","items","infoLabel","infoValue","created","$route","params","_id","loadEntityData","methods","entityId","then","response","JSON","parse","stringify","console","log","productSubGroupPrefix","productGroup","productSubGroup","yearlyRentPerQuintal","onesideHamaliPerQuintal","Date","creationDate","toLocaleString","editLoadedEntity","editCancelled","saved","saveActionStatus","deleteLoadedEntity","$bvModal","msgBoxConfirm","title","size","buttonSize","okVariant","okTitle","cancelTitle","footerClass","hideHeaderClose","centered","footerBgVariant","headerBgVariant","value","status","$router","replace"],"sources":["src/pages/referenceData/details/ProductGroupDetails.vue"],"sourcesContent":["<template>\n    <div class=\"tables\">\n        <div class=\"page-header\">\n            <h3 class=\"page-title\">\n                {{ pageTitle }}\n            </h3>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a href=\"javascript:void(0);\">Reference Data</a></li>\n                    <li class=\"breadcrumb-item\"><a :href=\"entityListingUrl\">{{ entityNamePlural }}</a></li>\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ pageTitle }}</li>\n                </ol>\n            </nav>\n        </div>\n        <div class=\"row col-lg-12 grid-margin stretch-card\">\n            <div class=\"card\">\n                <div class=\"card-body d-sm-flex justify-content-between\" v-if=\"loadedEntity==null\">\n                    <h4 class=\"card-title\">{{ entityDoesNotExistMessage }}</h4>\n                    <a :href=\"entityListingUrl\">\n                        <b-button class=\"btn btn-gradient-primary btn-icon-text\">\n                            <i class=\"mdi mdi-arrow-left-bold-circle btn-icon-prepend\"></i>\n                            Go back\n                        </b-button>\n                    </a>\n                </div>\n                <div class=\"card-body\" v-else>\n                    <div class=\"d-sm-flex pb-2 mb-2 justify-content-between\">\n                        <h4 class=\"card-title\" v-if=\"loadedEntity!=null\">{{ entityTitle }}</h4>\n                        <div>\n                            <b-button class=\"btn btn-gradient-danger btn-icon-text\" @click=\"deleteLoadedEntity\">\n                                <i class=\"mdi mdi-delete btn-icon-prepend\"></i>\n                                Delete\n                            </b-button>\n                            <b-button class=\"btn btn-gradient-primary btn-icon-text\">\n                                <i class=\"mdi mdi-printer btn-icon-prepend\"></i>\n                                Print\n                            </b-button>\n                        </div>\n                    </div>\n                    <br />\n                    <b-tabs class=\"tickets-tab-switch\">\n                        <b-tab title=\"Details\" active>\n                            <div v-if=\"!editMode\" class=\"d-sm-flex mx-4 py-2 justify-content-between\">\n                                <h4>Basic Details</h4>\n                                <b-button v-on:click=\"editLoadedEntity\" class=\"btn btn-gradient-primary btn-icon-text\">\n                                    <i class=\"mdi mdi-account-plus btn-icon-prepend\"></i>\n                                    Edit\n                                </b-button>\n                            </div>\n                            <div class=\"mx-4\">\n                                <EmployeeForm v-if=\"editMode\" :form-data=\"loadedEntity\" :submit-mode=\"submitMode\" \n                                    @saved=\"saved\" @cancelForm=\"editCancelled\"></EmployeeForm>\n                                <div class=\"row\" v-else>\n                                    <b-table-lite responsive borderless :fields=\"entityDetailsTable.fields\"\n                                        :items=\"entityDetailsTable.items\"> <!-- thead-class=\"hidden_header\" -->\n                                    </b-table-lite>\n                                </div>\n                            </div>\n                        </b-tab>\n                        <b-tab title=\"Loans & Payments\">\n                        </b-tab>\n                    </b-tabs>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport { getProductGroupById, deleteProductGroup } from \"@/services/ProductGroupService\";\nimport ProductGroupForm from \"../forms/ProductGroupForm.vue\";\n\nexport default {\n    name: \"ProductGroupDetails\",\n    components: {\n        ProductGroupForm\n    },\n    data: function () {\n        return {\n            entityName: \"Product Gorup\",\n            entityNamePlural: \"Product Groups\",\n            pageTitle: \"Product Group Details\",\n            entityListingUrl: \"/referenceData/productGroups/\",\n            entityTitle: \"\",\n            loadedEntity: null,\n            loadedEntityId: null,\n            entityDoesNotExistMessage: \"The Product Group you are looking for does not exist.\",\n            editMode: false,\n            submitMode: \"update\",\n            entityDetailsTable: {\n                fields: [\n                    { key: \"infoLabel\", label: \"\", sortable: false, thStyle: \"width: 20%;\" },\n                    { key: \"infoValue\", label: \"\", sortable: false, thStyle: \"word-wrap: break-word;\" }\n                ],\n                items: [       // update entity specific json data in an array format - Product Group\n                    { infoLabel: \"Product Group\", infoValue: \"\" },\n                    { infoLabel: \"Product Sub Group\", infoValue: \"\" },\n                    { infoLabel: \"Product Sub Group Prefix\", infoValue: \"\" },\n                    { infoLabel: \"Yearly Rent per Quintal\", infoValue: \"\" },\n                    { infoLabel: \"One side Hamali per Quintal\", infoValue: \"\"},\n                    { infoLabel: \"Creation Date\", infoValue: \"\"}\n                ]\n            }\n        };\n    },\n    created() {\n        this.loadedEntityId = this.$route.params._id;\n        this.loadEntityData(this.loadedEntityId);\n    },\n    methods: {\n        loadEntityData(entityId) {\n            // load entity data from backend: entity - Product Group\n            getProductGroupById(entityId).then(response => {\n                this.loadedEntity = JSON.parse(JSON.stringify(response));\n                console.log(this.loadedEntity);\n                if(this.loadedEntity != null) {\n                    this.entityTitle = this.loadedEntity.productSubGroupPrefix;\n                    this.entityDetailsTable.items[0].infoValue = this.loadedEntity.productGroup;\n                    this.entityDetailsTable.items[1].infoValue = this.loadedEntity.productSubGroup;\n                    this.entityDetailsTable.items[2].infoValue = this.loadedEntity.productSubGroupPrefix;\n                    this.entityDetailsTable.items[3].infoValue = this.loadedEntity.yearlyRentPerQuintal == null ? \"\" : \"Rs. \" + this.loadedEntity.yearlyRentPerQuintal + \"/-\";\n                    this.entityDetailsTable.items[4].infoValue = this.loadedEntity.onesideHamaliPerQuintal == null ? \"\" : \"Rs. \" + this.loadedEntity.onesideHamaliPerQuintal + \"/-\";\n                    this.entityDetailsTable.items[5].infoValue = (new Date(this.loadedEntity.creationDate)).toLocaleString();\n                }\n            });\n        },\n        editLoadedEntity() {\n            this.editMode=true;\n        },\n        editCancelled() {\n            this.editMode=false;\n        },\n        saved(saveActionStatus) {\n            if(saveActionStatus) {\n                this.loadEntityData(this.loadedEntityId);\n                this.editMode=false;\n            }\n        },\n        deleteLoadedEntity(){\n            this.$bvModal.msgBoxConfirm('Are you sure you want to delete the ' + this.entityName + '?', {\n                title: 'Please Confirm',\n                size: 'md',\n                buttonSize: 'md',\n                okVariant: 'danger',\n                okTitle: 'Confirm',\n                cancelTitle: 'Cancel',\n                footerClass: 'p-2',\n                hideHeaderClose: false,\n                centered: true,\n                footerBgVariant: 'light',\n                headerBgVariant: 'light'\n            }).then(value => {\n                if(value==true) {\n                    // delete entity data at the backend: entity - Product Group\n                    deleteProductGroup(this.loadedEntityId).then(response => {\n                        if(response.status==true) {\n                            this.$router.replace(this.entityListingUrl);\n                        } else {\n                            console.log(this.entityName, \" deletion failed\");\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n</script>"],"mappings":"AAsEA,SAAAA,mBAAA,EAAAC,kBAAA;AACA,OAAAC,gBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,IAAA,WAAAA,CAAA;IACA;MACAC,UAAA;MACAC,gBAAA;MACAC,SAAA;MACAC,gBAAA;MACAC,WAAA;MACAC,YAAA;MACAC,cAAA;MACAC,yBAAA;MACAC,QAAA;MACAC,UAAA;MACAC,kBAAA;QACAC,MAAA,GACA;UAAAC,GAAA;UAAAC,KAAA;UAAAC,QAAA;UAAAC,OAAA;QAAA,GACA;UAAAH,GAAA;UAAAC,KAAA;UAAAC,QAAA;UAAAC,OAAA;QAAA,EACA;QACAC,KAAA;QAAA;QACA;UAAAC,SAAA;UAAAC,SAAA;QAAA,GACA;UAAAD,SAAA;UAAAC,SAAA;QAAA,GACA;UAAAD,SAAA;UAAAC,SAAA;QAAA,GACA;UAAAD,SAAA;UAAAC,SAAA;QAAA,GACA;UAAAD,SAAA;UAAAC,SAAA;QAAA,GACA;UAAAD,SAAA;UAAAC,SAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA,KAAAb,cAAA,QAAAc,MAAA,CAAAC,MAAA,CAAAC,GAAA;IACA,KAAAC,cAAA,MAAAjB,cAAA;EACA;EACAkB,OAAA;IACAD,eAAAE,QAAA;MACA;MACA/B,mBAAA,CAAA+B,QAAA,EAAAC,IAAA,CAAAC,QAAA;QACA,KAAAtB,YAAA,GAAAuB,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAH,QAAA;QACAI,OAAA,CAAAC,GAAA,MAAA3B,YAAA;QACA,SAAAA,YAAA;UACA,KAAAD,WAAA,QAAAC,YAAA,CAAA4B,qBAAA;UACA,KAAAvB,kBAAA,CAAAM,KAAA,IAAAE,SAAA,QAAAb,YAAA,CAAA6B,YAAA;UACA,KAAAxB,kBAAA,CAAAM,KAAA,IAAAE,SAAA,QAAAb,YAAA,CAAA8B,eAAA;UACA,KAAAzB,kBAAA,CAAAM,KAAA,IAAAE,SAAA,QAAAb,YAAA,CAAA4B,qBAAA;UACA,KAAAvB,kBAAA,CAAAM,KAAA,IAAAE,SAAA,QAAAb,YAAA,CAAA+B,oBAAA,8BAAA/B,YAAA,CAAA+B,oBAAA;UACA,KAAA1B,kBAAA,CAAAM,KAAA,IAAAE,SAAA,QAAAb,YAAA,CAAAgC,uBAAA,8BAAAhC,YAAA,CAAAgC,uBAAA;UACA,KAAA3B,kBAAA,CAAAM,KAAA,IAAAE,SAAA,OAAAoB,IAAA,MAAAjC,YAAA,CAAAkC,YAAA,EAAAC,cAAA;QACA;MACA;IACA;IACAC,iBAAA;MACA,KAAAjC,QAAA;IACA;IACAkC,cAAA;MACA,KAAAlC,QAAA;IACA;IACAmC,MAAAC,gBAAA;MACA,IAAAA,gBAAA;QACA,KAAArB,cAAA,MAAAjB,cAAA;QACA,KAAAE,QAAA;MACA;IACA;IACAqC,mBAAA;MACA,KAAAC,QAAA,CAAAC,aAAA,+CAAA/C,UAAA;QACAgD,KAAA;QACAC,IAAA;QACAC,UAAA;QACAC,SAAA;QACAC,OAAA;QACAC,WAAA;QACAC,WAAA;QACAC,eAAA;QACAC,QAAA;QACAC,eAAA;QACAC,eAAA;MACA,GAAAhC,IAAA,CAAAiC,KAAA;QACA,IAAAA,KAAA;UACA;UACAhE,kBAAA,MAAAW,cAAA,EAAAoB,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAAiC,MAAA;cACA,KAAAC,OAAA,CAAAC,OAAA,MAAA3D,gBAAA;YACA;cACA4B,OAAA,CAAAC,GAAA,MAAAhC,UAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductFormSchema from './schemas/ProductFormSchema';\nimport { getAllProductGroups } from '@/services/ProductGroupService';\nimport { createProduct, updateProduct } from '@/services/ProductService';\nimport { get } from 'https';\nimport Multiselect from 'vue-multiselect';\nexport default {\n  name: 'ProductForm',\n  components: {\n    Multiselect\n  },\n  props: [\"formData\", \"submitMode\"],\n  data: function () {\n    return {\n      formSchema: ProductFormSchema,\n      formOptions: {\n        validateAfterChanged: true\n      },\n      loadedProductId: \"\",\n      isSaving: false,\n      formModel: {\n        productName: \"\",\n        productSubGroupPrefix: \"\",\n        bagSize: 0,\n        computedProductName: \"\",\n        hamaliPerBag: 0,\n        platformCooliePerBag: 0,\n        kataCooliePerBag: 0,\n        mamulluPerBag: 0,\n        insurancePerBag: 0,\n        monthlyRentPerBag: 0,\n        yearlyRentPerBag: 0,\n        yearlyRentPerKg: 0,\n        computedYearlyRentPerBag: 0\n      },\n      productGroupOptions: []\n    };\n  },\n  created() {\n    this.formModel.productName = this.formData.productName;\n    this.formModel.productSubGroupPrefix = this.formData.productSubGroupPrefix;\n    this.formModel.computedProductName = this.formData.computedProductName;\n    this.formModel.bagSize = this.formData.bagSize;\n    this.formModel.hamaliPerBag = this.formData.hamaliPerBag;\n    this.formModel.platformCooliePerBag = this.formData.platformCooliePerBag;\n    this.formModel.kataCooliePerBag = this.formData.kataCooliePerBag;\n    this.formModel.mamulluPerBag = this.formData.mamulluPerBag;\n    this.formModel.insurancePerBag = this.formData.insurancePerBag;\n    this.formModel.monthlyRentPerBag = this.formData.monthlyRentPerBag;\n    this.formModel.yearlyRentPerKg = this.formData.yearlyRentPerKg;\n    this.formModel.yearlyRentPerBag = this.formData.yearlyRentPerBag;\n    this.formModel.computedYearlyRentPerBag = this.formData.computedYearlyRentPerBag;\n    this.loadedProductId = this.formData._id;\n  },\n  methods: {\n    getProductGroupOptions() {\n      getAllProductGroups().then(response => {\n        response.forEach(productGroup => {\n          this.productGroupOptions.push({\n            \"_id\": productGroup._id,\n            \"name\": productGroup.productSubGroupPrefix\n          });\n        });\n      });\n    },\n    submitProductDetails() {\n      if (this.submitMode == \"update\") {\n        updateProduct(this.loadedProductId, this.formModel).then(response => {\n          var saveActionStatus = response;\n          this.$emit('productSaved', saveActionStatus);\n        });\n      } else if (this.submitMode == \"create\") {\n        console.log(\"Create Product : \", this.formModel);\n        let newProduct = {\n          productCode: this.formModel.productCode,\n          productFullName: this.formModel.productFullName,\n          designation: this.formModel.designation,\n          monthlySalary: this.formModel.monthlySalary,\n          creationDate: Date.now()\n        };\n        createProduct(newProduct).then(response => {\n          var createdProduct = response;\n          this.$emit('productSaved', createdProduct);\n        });\n      }\n    },\n    cancelProductForm() {\n      this.$emit('productEditCancelled');\n    }\n  }\n};","map":{"version":3,"names":["ProductFormSchema","getAllProductGroups","createProduct","updateProduct","get","Multiselect","name","components","props","data","formSchema","formOptions","validateAfterChanged","loadedProductId","isSaving","formModel","productName","productSubGroupPrefix","bagSize","computedProductName","hamaliPerBag","platformCooliePerBag","kataCooliePerBag","mamulluPerBag","insurancePerBag","monthlyRentPerBag","yearlyRentPerBag","yearlyRentPerKg","computedYearlyRentPerBag","productGroupOptions","created","formData","_id","methods","getProductGroupOptions","then","response","forEach","productGroup","push","submitProductDetails","submitMode","saveActionStatus","$emit","console","log","newProduct","productCode","productFullName","designation","monthlySalary","creationDate","Date","now","createdProduct","cancelProductForm"],"sources":["src/pages/referenceData/forms/ProductForm.vue"],"sourcesContent":["<template>\n    <div class=\"tables col-md-12 app-crud-form py-4 my-2\">\n        <form action=\"\" @submit.prevent=\"submitProductDetails\">\n            <vue-form-generator tag=\"div\" :schema=\"formSchema\" :options=\"formOptions\" :model=\"formModel\"/>\n            <div class=\"d-flex justify-content-end mt-3 pr-4\">\n                <button v-on:click=\"cancelProductForm\" type=\"button\" class=\"btn btn-secondary btn-md\">\n                        Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-md\">\n                    {{ isSaving ? 'Saving...' : 'Save' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script scoped lang=\"js\">\n\nimport ProductFormSchema from './schemas/ProductFormSchema';\nimport { getAllProductGroups } from '@/services/ProductGroupService';\nimport { createProduct, updateProduct } from '@/services/ProductService';\nimport { get } from 'https';\nimport Multiselect from 'vue-multiselect';\n\nexport default {\n    name: 'ProductForm',\n    components: {\n        Multiselect\n    },\n    props: [\n        \"formData\",\n        \"submitMode\"\n    ],\n    data: function () {\n        return {\n            formSchema: ProductFormSchema,\n            formOptions: {\n                validateAfterChanged: true\n            },\n            loadedProductId: \"\",\n            isSaving: false,\n            formModel: {\n                productName: \"\",\n                productSubGroupPrefix: \"\",\n                bagSize: 0,\n                computedProductName: \"\",\n                hamaliPerBag: 0,\n                platformCooliePerBag: 0,\n                kataCooliePerBag: 0,\n                mamulluPerBag: 0,\n                insurancePerBag: 0,\n                monthlyRentPerBag: 0,\n                yearlyRentPerBag: 0,\n                yearlyRentPerKg: 0,\n                computedYearlyRentPerBag: 0\n            },\n            productGroupOptions: []\n        }\n    },\n    created() {\n        this.formModel.productName = this.formData.productName;\n        this.formModel.productSubGroupPrefix = this.formData.productSubGroupPrefix;\n        this.formModel.computedProductName = this.formData.computedProductName;\n        this.formModel.bagSize = this.formData.bagSize;\n        this.formModel.hamaliPerBag = this.formData.hamaliPerBag;\n        this.formModel.platformCooliePerBag = this.formData.platformCooliePerBag;\n        this.formModel.kataCooliePerBag = this.formData.kataCooliePerBag;\n        this.formModel.mamulluPerBag = this.formData.mamulluPerBag;\n        this.formModel.insurancePerBag = this.formData.insurancePerBag;\n        this.formModel.monthlyRentPerBag = this.formData.monthlyRentPerBag;\n        this.formModel.yearlyRentPerKg = this.formData.yearlyRentPerKg;\n        this.formModel.yearlyRentPerBag = this.formData.yearlyRentPerBag;\n        this.formModel.computedYearlyRentPerBag = this.formData.computedYearlyRentPerBag;\n        this.loadedProductId = this.formData._id;\n    },\n    methods: {\n        getProductGroupOptions() {\n            getAllProductGroups().then(response => {\n                response.forEach(productGroup => {\n                    this.productGroupOptions.push({\n                        \"_id\": productGroup._id,\n                        \"name\": productGroup.productSubGroupPrefix\n                    });\n                });\n            });\n        },\n        submitProductDetails() {\n            if(this.submitMode==\"update\") {\n                updateProduct(this.loadedProductId, this.formModel).then(response => {\n                    var saveActionStatus = response;\n                    this.$emit('productSaved', saveActionStatus);\n                });\n            } else if (this.submitMode == \"create\") {\n                console.log(\"Create Product : \", this.formModel);\n                let newProduct = {\n                    productCode: this.formModel.productCode,\n                    productFullName: this.formModel.productFullName,\n                    designation: this.formModel.designation,\n                    monthlySalary: this.formModel.monthlySalary,\n                    creationDate: Date.now()\n                };\n                createProduct(newProduct).then(response => {\n                    var createdProduct = response;\n                    this.$emit('productSaved', createdProduct);\n                });\n            }\n        },\n        cancelProductForm() {\n            this.$emit('productEditCancelled');\n        }\n    }\n}\n</script>"],"mappings":";AAkBA,OAAAA,iBAAA;AACA,SAAAC,mBAAA;AACA,SAAAC,aAAA,EAAAC,aAAA;AACA,SAAAC,GAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA,GACA,YACA,aACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,UAAA,EAAAV,iBAAA;MACAW,WAAA;QACAC,oBAAA;MACA;MACAC,eAAA;MACAC,QAAA;MACAC,SAAA;QACAC,WAAA;QACAC,qBAAA;QACAC,OAAA;QACAC,mBAAA;QACAC,YAAA;QACAC,oBAAA;QACAC,gBAAA;QACAC,aAAA;QACAC,eAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,eAAA;QACAC,wBAAA;MACA;MACAC,mBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAf,SAAA,CAAAC,WAAA,QAAAe,QAAA,CAAAf,WAAA;IACA,KAAAD,SAAA,CAAAE,qBAAA,QAAAc,QAAA,CAAAd,qBAAA;IACA,KAAAF,SAAA,CAAAI,mBAAA,QAAAY,QAAA,CAAAZ,mBAAA;IACA,KAAAJ,SAAA,CAAAG,OAAA,QAAAa,QAAA,CAAAb,OAAA;IACA,KAAAH,SAAA,CAAAK,YAAA,QAAAW,QAAA,CAAAX,YAAA;IACA,KAAAL,SAAA,CAAAM,oBAAA,QAAAU,QAAA,CAAAV,oBAAA;IACA,KAAAN,SAAA,CAAAO,gBAAA,QAAAS,QAAA,CAAAT,gBAAA;IACA,KAAAP,SAAA,CAAAQ,aAAA,QAAAQ,QAAA,CAAAR,aAAA;IACA,KAAAR,SAAA,CAAAS,eAAA,QAAAO,QAAA,CAAAP,eAAA;IACA,KAAAT,SAAA,CAAAU,iBAAA,QAAAM,QAAA,CAAAN,iBAAA;IACA,KAAAV,SAAA,CAAAY,eAAA,QAAAI,QAAA,CAAAJ,eAAA;IACA,KAAAZ,SAAA,CAAAW,gBAAA,QAAAK,QAAA,CAAAL,gBAAA;IACA,KAAAX,SAAA,CAAAa,wBAAA,QAAAG,QAAA,CAAAH,wBAAA;IACA,KAAAf,eAAA,QAAAkB,QAAA,CAAAC,GAAA;EACA;EACAC,OAAA;IACAC,uBAAA;MACAjC,mBAAA,GAAAkC,IAAA,CAAAC,QAAA;QACAA,QAAA,CAAAC,OAAA,CAAAC,YAAA;UACA,KAAAT,mBAAA,CAAAU,IAAA;YACA,OAAAD,YAAA,CAAAN,GAAA;YACA,QAAAM,YAAA,CAAArB;UACA;QACA;MACA;IACA;IACAuB,qBAAA;MACA,SAAAC,UAAA;QACAtC,aAAA,MAAAU,eAAA,OAAAE,SAAA,EAAAoB,IAAA,CAAAC,QAAA;UACA,IAAAM,gBAAA,GAAAN,QAAA;UACA,KAAAO,KAAA,iBAAAD,gBAAA;QACA;MACA,gBAAAD,UAAA;QACAG,OAAA,CAAAC,GAAA,2BAAA9B,SAAA;QACA,IAAA+B,UAAA;UACAC,WAAA,OAAAhC,SAAA,CAAAgC,WAAA;UACAC,eAAA,OAAAjC,SAAA,CAAAiC,eAAA;UACAC,WAAA,OAAAlC,SAAA,CAAAkC,WAAA;UACAC,aAAA,OAAAnC,SAAA,CAAAmC,aAAA;UACAC,YAAA,EAAAC,IAAA,CAAAC,GAAA;QACA;QACAnD,aAAA,CAAA4C,UAAA,EAAAX,IAAA,CAAAC,QAAA;UACA,IAAAkB,cAAA,GAAAlB,QAAA;UACA,KAAAO,KAAA,iBAAAW,cAAA;QACA;MACA;IACA;IACAC,kBAAA;MACA,KAAAZ,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
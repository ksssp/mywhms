{"ast":null,"code":"import $ from \"jquery\";\nimport jszip from 'jszip';\nimport 'datatables.net-buttons-bs4';\nimport 'datatables.net-buttons/js/buttons.colVis.mjs';\nimport 'datatables.net-buttons/js/buttons.html5.mjs';\nimport 'datatables.net-colreorder-bs4';\nexport default {\n  name: \"AppDataTable\",\n  props: [\"downloadFileName\", \"fields\", \"fieldDefs\", \"tableData\"],\n  components: {},\n  data: function () {\n    return {\n      totalRows: 0,\n      exportFileName: \"\",\n      columns: [],\n      columnDefs: [],\n      items: []\n    };\n  },\n  mounted() {\n    this.exportFileName = this.downloadFileName;\n    this.columns = this.fields;\n    this.columnDefs = this.fieldDefs;\n    this.items = this.tableData;\n    $(\"#app-table-list\").DataTable({\n      paging: true,\n      searching: true,\n      ordering: true,\n      scrollX: true,\n      columns: this.fields,\n      columnDefs: this.fieldDefs,\n      data: this.tableData,\n      colReorder: true,\n      dom: \"<'row'<'col-md-2'l><'col-md-4'f><'col-md-6'B>>\" + \"<'row'<'col-md-12'tr>>\" + \"<'row'<'col-md-5'i><'col-md-7'p>>\",\n      buttons: [{\n        extend: 'collection',\n        text: 'Export',\n        autoClose: true,\n        buttons: [{\n          extend: 'csv',\n          text: \"Export as CSV\",\n          exportOptions: {\n            columns: ':visible'\n          }\n        }, {\n          extend: 'excel',\n          text: \"Export as Excel\",\n          exportOptions: {\n            columns: ':visible'\n          }\n        }],\n        collectionLayout: 'dropdown'\n      }, {\n        extend: 'colvis',\n        text: 'Show/Hide Columns',\n        postfixButtons: ['colvisRestore']\n      }]\n    });\n  },\n  methods: {\n    edit(item, index, button) {\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    delete(item, index, button) {\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    }\n  }\n};","map":{"version":3,"names":["$","jszip","name","props","components","data","totalRows","exportFileName","columns","columnDefs","items","mounted","downloadFileName","fields","fieldDefs","tableData","DataTable","paging","searching","ordering","scrollX","colReorder","dom","buttons","extend","text","autoClose","exportOptions","collectionLayout","postfixButtons","methods","edit","item","index","button","delete"],"sources":["src/components/tables/AppDataTable.vue"],"sourcesContent":["<template>\n    <div class=\"tables\">\n        <table id=\"app-table-list\" class=\"table hover row-border stripe order-column\" style=\"width:100%\"></table>\n    </div>\n</template>\n\n<script>\nimport $ from \"jquery\";\n\nimport jszip from 'jszip';\nimport 'datatables.net-buttons-bs4';\nimport 'datatables.net-buttons/js/buttons.colVis.mjs';\nimport 'datatables.net-buttons/js/buttons.html5.mjs';\nimport 'datatables.net-colreorder-bs4';\n\nexport default {\n    name: \"AppDataTable\",\n    props: [\n        \"downloadFileName\",\n        \"fields\",\n        \"fieldDefs\",\n        \"tableData\",\n    ],\n    components: {\n    },\n    data: function () {\n        return {\n            totalRows: 0,\n            exportFileName: \"\",\n            columns: [],\n            columnDefs: [],\n            items: []\n        };\n    },\n    mounted() {\n        this.exportFileName = this.downloadFileName;\n        this.columns = this.fields;\n        this.columnDefs = this.fieldDefs;\n        this.items = this.tableData;\n        $(\"#app-table-list\").DataTable({\n            paging: true,\n            searching: true,\n            ordering: true,\n            scrollX: true,\n            columns: this.fields,\n            columnDefs: this.fieldDefs,\n            data: this.tableData,\n            colReorder: true,\n            dom: \"<'row'<'col-md-2'l><'col-md-4'f><'col-md-6'B>>\" +\n                \"<'row'<'col-md-12'tr>>\" +\n                \"<'row'<'col-md-5'i><'col-md-7'p>>\",\n            buttons: [ \n                {\n                    extend: 'collection',\n                    text: 'Export',\n                    autoClose: true,\n                    buttons: [ \n                        {\n                            extend: 'csv',\n                            text: \"Export as CSV\",\n                            exportOptions: { columns: ':visible' } \n                        },\n                        {\n                            extend: 'excel',\n                            text: \"Export as Excel\",\n                            exportOptions: { columns: ':visible' } \n                        }],\n                    collectionLayout: 'dropdown'\n                },\n                {\n                    extend: 'colvis',\n                    text: 'Show/Hide Columns',\n                    postfixButtons: ['colvisRestore']\n\n                }\n            ]\n        });\n    },\n    methods: {\n        edit(item, index, button) {\n            // this.infoModal.title = `Row index: ${index}`\n            // this.infoModal.content = JSON.stringify(item, null, 2)\n            // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n        },\n        delete(item, index, button) {\n            // this.infoModal.title = `Row index: ${index}`\n            // this.infoModal.content = JSON.stringify(item, null, 2)\n            // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n        }\n    }\n}\n</script>"],"mappings":"AAOA,OAAAA,CAAA;AAEA,OAAAC,KAAA;AACA;AACA;AACA;AACA;AAEA;EACAC,IAAA;EACAC,KAAA,GACA,oBACA,UACA,aACA,YACA;EACAC,UAAA,GACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,SAAA;MACAC,cAAA;MACAC,OAAA;MACAC,UAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAJ,cAAA,QAAAK,gBAAA;IACA,KAAAJ,OAAA,QAAAK,MAAA;IACA,KAAAJ,UAAA,QAAAK,SAAA;IACA,KAAAJ,KAAA,QAAAK,SAAA;IACAf,CAAA,oBAAAgB,SAAA;MACAC,MAAA;MACAC,SAAA;MACAC,QAAA;MACAC,OAAA;MACAZ,OAAA,OAAAK,MAAA;MACAJ,UAAA,OAAAK,SAAA;MACAT,IAAA,OAAAU,SAAA;MACAM,UAAA;MACAC,GAAA,qDACA,2BACA;MACAC,OAAA,GACA;QACAC,MAAA;QACAC,IAAA;QACAC,SAAA;QACAH,OAAA,GACA;UACAC,MAAA;UACAC,IAAA;UACAE,aAAA;YAAAnB,OAAA;UAAA;QACA,GACA;UACAgB,MAAA;UACAC,IAAA;UACAE,aAAA;YAAAnB,OAAA;UAAA;QACA;QACAoB,gBAAA;MACA,GACA;QACAJ,MAAA;QACAC,IAAA;QACAI,cAAA;MAEA;IAEA;EACA;EACAC,OAAA;IACAC,KAAAC,IAAA,EAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;IAAA,CACA;IACAC,OAAAH,IAAA,EAAAC,KAAA,EAAAC,MAAA;MACA;MACA;MACA;IAAA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}